

Microchip Technology PIC18 LITE Macro Assembler V1.35 build -356382666 
                                                                                               Fri Nov 18 09:37:30 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	18F4520
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	text0,global,reloc=2,class=CODE,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,delta=1
    18                           	psect	text7,global,reloc=2,class=CODE,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,delta=1
    23                           	psect	text12,global,reloc=2,class=CODE,delta=1
    24                           	psect	text13,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    26                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    27                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    28                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    29                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    30  0000                     
    31                           	psect	idataCOMRAM
    32  000CB6                     __pidataCOMRAM:
    33                           	opt stack 0
    34                           
    35                           ;initializer for main@F3367
    36  000CB6  05                 	db	5
    37  000CB7  0A                 	db	10
    38  000CB8  0F                 	db	15
    39  000CB9  14                 	db	20
    40  000CBA  19                 	db	25
    41  000CBB  1E                 	db	30
    42  000CBC  23                 	db	35
    43  000CBD  28                 	db	40
    44  000CBE  2D                 	db	45
    45  000CBF  32                 	db	50
    46  000CC0  37                 	db	55
    47  000CC1  3C                 	db	60
    48  000CC2  41                 	db	65
    49  000CC3  46                 	db	70
    50  000CC4  4B                 	db	75
    51  000CC5  50                 	db	80
    52  000CC6  55                 	db	85
    53  000CC7  5A                 	db	90
    54                           
    55                           ;initializer for _Motor
    56  000CC8  0D                 	db	low STR_2
    57  000CC9  06                 	db	high STR_2
    58                           
    59                           ;initializer for _Speed
    60  000CCA  06                 	db	low STR_1
    61  000CCB  06                 	db	high STR_1
    62                           
    63                           	psect	smallconst
    64  000600                     __psmallconst:
    65                           	opt stack 0
    66  000600  00                 	db	0
    67  000601                     _lcd_init:
    68                           	opt stack 0
    69  000601  33                 	db	51
    70  000602  32                 	db	50
    71  000603  2C                 	db	44
    72  000604  06                 	db	6
    73  000605  0C                 	db	12
    74  000606                     __end_of_lcd_init:
    75                           	opt stack 0
    76  0000                     _CCP1CON	set	4029
    77  0000                     _CCP2CON	set	4026
    78  0000                     _CCPR1H	set	4031
    79  0000                     _CCPR1L	set	4030
    80  0000                     _CCPR2L	set	4027
    81  0000                     _INTCONbits	set	4082
    82  0000                     _LATDbits	set	3980
    83  0000                     _OSCCONbits	set	4051
    84  0000                     _PIE1bits	set	3997
    85  0000                     _PIR1bits	set	3998
    86  0000                     _PORTA	set	3968
    87  0000                     _PORTB	set	3969
    88  0000                     _PORTC	set	3970
    89  0000                     _PR2	set	4043
    90  0000                     _T1CONbits	set	4045
    91  0000                     _T2CON	set	4042
    92  0000                     _TMR1H	set	4047
    93  0000                     _TMR1L	set	4046
    94  0000                     _TRISA	set	3986
    95  0000                     _TRISB	set	3987
    96  0000                     _TRISCbits	set	3988
    97  0000                     _TRISD	set	3989
    98  000606                     STR_1:
    99  000606  53                 	db	83	;'S'
   100  000607  70                 	db	112	;'p'
   101  000608  65                 	db	101	;'e'
   102  000609  65                 	db	101	;'e'
   103  00060A  64                 	db	100	;'d'
   104  00060B  20                 	db	32
   105  00060C  00                 	db	0
   106  00060D                     STR_2:
   107  00060D  50                 	db	80	;'P'
   108  00060E  57                 	db	87	;'W'
   109  00060F  4D                 	db	77	;'M'
   110  000610  5F                 	db	95	;'_'
   111  000611  25                 	db	37
   112  000612  00                 	db	0
   113                           
   114                           ; #config settings
   115  000613  00                 	db	0	; dummy byte at the end
   116  0000                     
   117                           	psect	cinit
   118  000C16                     __pcinit:
   119                           	opt stack 0
   120  000C16                     start_initialization:
   121                           	opt stack 0
   122  000C16                     __initialization:
   123                           	opt stack 0
   124                           
   125                           ; Clear objects allocated to COMRAM (3 bytes)
   126  000C16  6A4B               	clrf	(__pbssCOMRAM+2)& (0+255),c
   127  000C18  6A4A               	clrf	(__pbssCOMRAM+1)& (0+255),c
   128  000C1A  6A49               	clrf	__pbssCOMRAM& (0+255),c
   129                           
   130                           ; Initialize objects allocated to COMRAM (22 bytes)
   131                           ; load TBLPTR registers with __pidataCOMRAM
   132  000C1C  0EB6               	movlw	low __pidataCOMRAM
   133  000C1E  6EF6               	movwf	tblptrl,c
   134  000C20  0E0C               	movlw	high __pidataCOMRAM
   135  000C22  6EF7               	movwf	tblptrh,c
   136  000C24  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   137  000C26  6EF8               	movwf	tblptru,c
   138  000C28  EE00  F033         	lfsr	0,__pdataCOMRAM
   139  000C2C  EE10 F016          	lfsr	1,22
   140  000C30                     copy_data0:
   141  000C30  0009               	tblrd		*+
   142  000C32  CFF5 FFEE          	movff	tablat,postinc0
   143  000C36  50E5               	movf	postdec1,w,c
   144  000C38  50E1               	movf	fsr1l,w,c
   145  000C3A  E1FA               	bnz	copy_data0
   146  000C3C                     end_of_initialization:
   147                           	opt stack 0
   148  000C3C                     __end_of__initialization:
   149                           	opt stack 0
   150  000C3C  904C               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   151  000C3E  924C               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   152  000C40  0E00               	movlw	low (__Lsmallconst shr (0+16))
   153  000C42  6EF8               	movwf	tblptru,c
   154  000C44  0E06               	movlw	high __Lsmallconst
   155  000C46  6EF7               	movwf	tblptrh,c
   156  000C48  0100               	movlb	0
   157  000C4A  EF0A  F003         	goto	_main	;jump to C main() function
   158                           tblptru	equ	0xFF8
   159                           tblptrh	equ	0xFF7
   160                           tblptrl	equ	0xFF6
   161                           tablat	equ	0xFF5
   162                           postinc0	equ	0xFEE
   163                           postdec1	equ	0xFE5
   164                           fsr1l	equ	0xFE1
   165                           
   166                           	psect	bssCOMRAM
   167  000049                     __pbssCOMRAM:
   168                           	opt stack 0
   169  000049                     _captured:
   170                           	opt stack 0
   171  000049                     	ds	2
   172  00004B                     _i:
   173                           	opt stack 0
   174  00004B                     	ds	1
   175                           tblptru	equ	0xFF8
   176                           tblptrh	equ	0xFF7
   177                           tblptrl	equ	0xFF6
   178                           tablat	equ	0xFF5
   179                           postinc0	equ	0xFEE
   180                           postdec1	equ	0xFE5
   181                           fsr1l	equ	0xFE1
   182                           
   183                           	psect	dataCOMRAM
   184  000033                     __pdataCOMRAM:
   185                           	opt stack 0
   186  000033                     main@F3367:
   187                           	opt stack 0
   188  000033                     	ds	18
   189  000045                     _Motor:
   190                           	opt stack 0
   191  000045                     	ds	2
   192  000047                     _Speed:
   193                           	opt stack 0
   194  000047                     	ds	2
   195                           tblptru	equ	0xFF8
   196                           tblptrh	equ	0xFF7
   197                           tblptrl	equ	0xFF6
   198                           tablat	equ	0xFF5
   199                           postinc0	equ	0xFEE
   200                           postdec1	equ	0xFE5
   201                           fsr1l	equ	0xFE1
   202                           
   203                           	psect	cstackCOMRAM
   204  000001                     __pcstackCOMRAM:
   205                           	opt stack 0
   206  000001                     ??_ISR:
   207  000001                     
   208                           ; 1 bytes @ 0x0
   209  000001                     	ds	14
   210  00000F                     ??_delay_1s:
   211  00000F                     ?___awdiv:
   212                           	opt stack 0
   213  00000F                     ?___awmod:
   214                           	opt stack 0
   215  00000F                     ?___ltdiv:
   216                           	opt stack 0
   217  00000F                     lcd_raw_send@RS:
   218                           	opt stack 0
   219  00000F                     ___awdiv@dividend:
   220                           	opt stack 0
   221  00000F                     ___awmod@dividend:
   222                           	opt stack 0
   223  00000F                     ___ltdiv@dividend:
   224                           	opt stack 0
   225                           
   226                           ; 3 bytes @ 0xE
   227  00000F                     	ds	1
   228  000010                     ??_lcd_raw_send:
   229  000010                     delay_1s@i:
   230                           	opt stack 0
   231                           
   232                           ; 1 bytes @ 0xF
   233  000010                     	ds	1
   234  000011                     ___awdiv@divisor:
   235                           	opt stack 0
   236  000011                     ___awmod@divisor:
   237                           	opt stack 0
   238                           
   239                           ; 2 bytes @ 0x10
   240  000011                     	ds	1
   241  000012                     lcd_raw_send@in:
   242                           	opt stack 0
   243  000012                     ___ltdiv@divisor:
   244                           	opt stack 0
   245                           
   246                           ; 3 bytes @ 0x11
   247  000012                     	ds	1
   248  000013                     lcd_print_ch@in:
   249                           	opt stack 0
   250  000013                     lcd_command@in:
   251                           	opt stack 0
   252  000013                     ___awdiv@counter:
   253                           	opt stack 0
   254  000013                     ___awmod@counter:
   255                           	opt stack 0
   256                           
   257                           ; 1 bytes @ 0x12
   258  000013                     	ds	1
   259  000014                     ??_lcd_clear:
   260  000014                     lcd_cursor@y:
   261                           	opt stack 0
   262  000014                     ___awdiv@sign:
   263                           	opt stack 0
   264  000014                     ___awmod@sign:
   265                           	opt stack 0
   266  000014                     lcd_print@mess:
   267                           	opt stack 0
   268                           
   269                           ; 2 bytes @ 0x13
   270  000014                     	ds	1
   271  000015                     ??_lcd_start:
   272  000015                     lcd_cursor@x:
   273                           	opt stack 0
   274  000015                     ___awdiv@quotient:
   275                           	opt stack 0
   276  000015                     ___ltdiv@quotient:
   277                           	opt stack 0
   278                           
   279                           ; 3 bytes @ 0x14
   280  000015                     	ds	1
   281  000016                     ??_lcd_print:
   282  000016                     lcd_start@i:
   283                           	opt stack 0
   284                           
   285                           ; 1 bytes @ 0x15
   286  000016                     	ds	1
   287  000017                     lcd_display_value@hunds:
   288                           	opt stack 0
   289                           
   290                           ; 1 bytes @ 0x16
   291  000017                     	ds	1
   292  000018                     lcd_print@i:
   293                           	opt stack 0
   294  000018                     lcd_display_value@tens:
   295                           	opt stack 0
   296  000018                     ___ltdiv@counter:
   297                           	opt stack 0
   298                           
   299                           ; 1 bytes @ 0x17
   300  000018                     	ds	1
   301  000019                     lcd_display_value@units:
   302                           	opt stack 0
   303                           
   304                           ; 1 bytes @ 0x18
   305  000019                     	ds	1
   306  00001A                     lcd_display_value@value:
   307                           	opt stack 0
   308                           
   309                           ; 1 bytes @ 0x19
   310  00001A                     	ds	1
   311  00001B                     main@duty:
   312                           	opt stack 0
   313                           
   314                           ; 18 bytes @ 0x1A
   315  00001B                     	ds	18
   316  00002D                     main@tclk:
   317                           	opt stack 0
   318                           
   319                           ; 3 bytes @ 0x2C
   320  00002D                     	ds	3
   321  000030                     main@rev_s:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x2F
   325  000030                     	ds	2
   326  000032                     main@p:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x31
   330  000032                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           postdec1	equ	0xFE5
   337                           fsr1l	equ	0xFE1
   338                           
   339 ;;
   340 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   341 ;;
   342 ;; *************** function _main *****************
   343 ;; Defined at:
   344 ;;		line 74 in file "Motor_Control_4tab.c"
   345 ;; Parameters:    Size  Location     Type
   346 ;;		None
   347 ;; Auto vars:     Size  Location     Type
   348 ;;  duty           18   26[COMRAM] unsigned char [18]
   349 ;;  tclk            3   44[COMRAM] unsigned um
   350 ;;  rev_s           2   47[COMRAM] unsigned int 
   351 ;;  p               1   49[COMRAM] unsigned char 
   352 ;; Return value:  Size  Location     Type
   353 ;;		None               void
   354 ;; Registers used:
   355 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   356 ;; Tracked objects:
   357 ;;		On entry : 0/0
   358 ;;		On exit  : 0/0
   359 ;;		Unchanged: 0/0
   360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   361 ;;      Params:         0       0       0       0       0       0       0
   362 ;;      Locals:        24       0       0       0       0       0       0
   363 ;;      Temps:          0       0       0       0       0       0       0
   364 ;;      Totals:        24       0       0       0       0       0       0
   365 ;;Total ram usage:       24 bytes
   366 ;; Hardware stack levels required when called:    5
   367 ;; This function calls:
   368 ;;		_Initial
   369 ;;		___ltdiv
   370 ;;		_delay_1s
   371 ;;		_lcd_cursor
   372 ;;		_lcd_display_value
   373 ;;		_lcd_print
   374 ;;		_lcd_start
   375 ;; This function is called by:
   376 ;;		Startup code after reset
   377 ;; This function uses a non-reentrant model
   378 ;;
   379                           
   380                           	psect	text0
   381  000614                     __ptext0:
   382                           	opt stack 0
   383  000614                     _main:
   384                           	opt stack 26
   385                           
   386                           ;Motor_Control_4tab.c: 77: unsigned short long tclk = 250000;
   387                           
   388                           ;incstack = 0
   389  000614  0E90               	movlw	144
   390  000616  6E2D               	movwf	main@tclk,c
   391  000618  0ED0               	movlw	208
   392  00061A  6E2E               	movwf	main@tclk+1,c
   393  00061C  0E03               	movlw	3
   394  00061E  6E2F               	movwf	main@tclk+2,c
   395                           
   396                           ;Motor_Control_4tab.c: 78: unsigned int rev_s = 0;
   397  000620  0E00               	movlw	0
   398  000622  6E31               	movwf	main@rev_s+1,c
   399  000624  0E00               	movlw	0
   400  000626  6E30               	movwf	main@rev_s,c
   401                           
   402                           ;Motor_Control_4tab.c: 79: unsigned char duty[18] = {5,10,15,20,25,30,35,40,45,50,55,60,
      +                          65,70,75,80,85,90};
   403  000628  EE20  F033         	lfsr	2,main@F3367
   404  00062C  EE10  F01B         	lfsr	1,main@duty
   405  000630  0E11               	movlw	17
   406  000632                     u621:
   407  000632  CFDB FFE3          	movff	plusw2,plusw1
   408  000636  06E8               	decf	wreg,f,c
   409  000638  E2FC               	bc	u621
   410                           
   411                           ;Motor_Control_4tab.c: 80: unsigned char p =0;
   412  00063A  0E00               	movlw	0
   413  00063C  6E32               	movwf	main@p,c
   414                           
   415                           ;Motor_Control_4tab.c: 82: lcd_start () ;
   416  00063E  ECEA  F005         	call	_lcd_start	;wreg free
   417                           
   418                           ;Motor_Control_4tab.c: 83: lcd_cursor ( 2, 1 ) ;
   419  000642  0E01               	movlw	1
   420  000644  6E14               	movwf	lcd_cursor@y,c
   421  000646  0E02               	movlw	2
   422  000648  EC4E  F006         	call	_lcd_cursor
   423                           
   424                           ;Motor_Control_4tab.c: 84: lcd_print ( Speed ) ;
   425  00064C  C047  F014         	movff	_Speed,lcd_print@mess
   426  000650  C048  F015         	movff	_Speed+1,lcd_print@mess+1
   427  000654  EC97  F005         	call	_lcd_print	;wreg free
   428                           
   429                           ;Motor_Control_4tab.c: 85: lcd_cursor ( 2, 0 ) ;
   430  000658  0E00               	movlw	0
   431  00065A  6E14               	movwf	lcd_cursor@y,c
   432  00065C  0E02               	movlw	2
   433  00065E  EC4E  F006         	call	_lcd_cursor
   434                           
   435                           ;Motor_Control_4tab.c: 86: lcd_print ( Motor ) ;
   436  000662  C045  F014         	movff	_Motor,lcd_print@mess
   437  000666  C046  F015         	movff	_Motor+1,lcd_print@mess+1
   438  00066A  EC97  F005         	call	_lcd_print	;wreg free
   439                           
   440                           ;Motor_Control_4tab.c: 89: Initial();
   441  00066E  ECC1  F005         	call	_Initial	;wreg free
   442                           
   443                           ;Motor_Control_4tab.c: 90: PIE1bits.CCP1IE = 1;
   444  000672  849D               	bsf	3997,2,c	;volatile
   445  000674                     l1338:
   446                           
   447                           ;Motor_Control_4tab.c: 94: {
   448                           ;Motor_Control_4tab.c: 97: for (p=0;p<18;p++)
   449  000674  0E00               	movlw	0
   450  000676  6E32               	movwf	main@p,c
   451  000678                     l1340:
   452  000678  0E11               	movlw	17
   453  00067A  6432               	cpfsgt	main@p,c
   454  00067C  D001               	goto	l1344
   455  00067E  D04C               	goto	l1378
   456  000680                     l1344:
   457                           
   458                           ;Motor_Control_4tab.c: 98: {
   459                           ;Motor_Control_4tab.c: 99: CCPR2L = duty[p];
   460  000680  5032               	movf	main@p,w,c
   461  000682  0D01               	mullw	1
   462  000684  0E1B               	movlw	low main@duty
   463  000686  24F3               	addwf	prodl,w,c
   464  000688  6ED9               	movwf	fsr2l,c
   465  00068A  0E00               	movlw	high main@duty
   466  00068C  20F4               	addwfc	prodh,w,c
   467  00068E  6EDA               	movwf	fsr2h,c
   468  000690  50DF               	movf	indf2,w,c
   469  000692  6EBB               	movwf	4027,c	;volatile
   470                           
   471                           ;Motor_Control_4tab.c: 100: for(i=0;i<5;i++)
   472  000694  0E00               	movlw	0
   473  000696  6E4B               	movwf	_i,c
   474  000698                     l1348:
   475  000698  0E04               	movlw	4
   476  00069A  644B               	cpfsgt	_i,c
   477  00069C  D001               	goto	l1352
   478  00069E  D03A               	goto	l1374
   479  0006A0                     l1352:
   480                           
   481                           ;Motor_Control_4tab.c: 101: {
   482                           ;Motor_Control_4tab.c: 102: (captured==0) ? (rev_s = 0): (rev_s = tclk/captured);
   483  0006A0  5049               	movf	_captured,w,c
   484  0006A2  104A               	iorwf	_captured+1,w,c
   485  0006A4  A4D8               	btfss	status,2,c
   486  0006A6  D005               	goto	l1356
   487  0006A8  0E00               	movlw	0
   488  0006AA  6E31               	movwf	main@rev_s+1,c
   489  0006AC  0E00               	movlw	0
   490  0006AE  6E30               	movwf	main@rev_s,c
   491  0006B0  D011               	goto	l1358
   492  0006B2                     l1356:
   493  0006B2  C02D  F00F         	movff	main@tclk,___ltdiv@dividend
   494  0006B6  C02E  F010         	movff	main@tclk+1,___ltdiv@dividend+1
   495  0006BA  C02F  F011         	movff	main@tclk+2,___ltdiv@dividend+2
   496  0006BE  C049  F012         	movff	_captured,___ltdiv@divisor
   497  0006C2  C04A  F013         	movff	_captured+1,___ltdiv@divisor+1
   498  0006C6  6A14               	clrf	___ltdiv@divisor+2,c
   499  0006C8  EC62  F005         	call	___ltdiv	;wreg free
   500  0006CC  C00F  F030         	movff	?___ltdiv,main@rev_s
   501  0006D0  C010  F031         	movff	?___ltdiv+1,main@rev_s+1
   502  0006D4                     l1358:
   503                           
   504                           ;Motor_Control_4tab.c: 103: captured = 0;
   505  0006D4  0E00               	movlw	0
   506  0006D6  6E4A               	movwf	_captured+1,c
   507  0006D8  0E00               	movlw	0
   508  0006DA  6E49               	movwf	_captured,c
   509                           
   510                           ;Motor_Control_4tab.c: 104: lcd_cursor(9,0);
   511  0006DC  0E00               	movlw	0
   512  0006DE  6E14               	movwf	lcd_cursor@y,c
   513  0006E0  0E09               	movlw	9
   514  0006E2  EC4E  F006         	call	_lcd_cursor
   515                           
   516                           ;Motor_Control_4tab.c: 105: lcd_display_value(duty[p]);
   517  0006E6  5032               	movf	main@p,w,c
   518  0006E8  0D01               	mullw	1
   519  0006EA  0E1B               	movlw	low main@duty
   520  0006EC  24F3               	addwf	prodl,w,c
   521  0006EE  6ED9               	movwf	fsr2l,c
   522  0006F0  0E00               	movlw	high main@duty
   523  0006F2  20F4               	addwfc	prodh,w,c
   524  0006F4  6EDA               	movwf	fsr2h,c
   525  0006F6  50DF               	movf	indf2,w,c
   526  0006F8  ECA3  F004         	call	_lcd_display_value
   527                           
   528                           ;Motor_Control_4tab.c: 107: lcd_cursor(9,1);
   529  0006FC  0E01               	movlw	1
   530  0006FE  6E14               	movwf	lcd_cursor@y,c
   531  000700  0E09               	movlw	9
   532  000702  EC4E  F006         	call	_lcd_cursor
   533                           
   534                           ;Motor_Control_4tab.c: 108: lcd_display_value(rev_s);
   535  000706  5030               	movf	main@rev_s,w,c
   536  000708  ECA3  F004         	call	_lcd_display_value
   537                           
   538                           ;Motor_Control_4tab.c: 110: delay_1s();
   539  00070C  EC3E  F006         	call	_delay_1s	;wreg free
   540  000710  2A4B               	incf	_i,f,c
   541  000712  D7C2               	goto	l1348
   542  000714                     l1374:
   543  000714  2A32               	incf	main@p,f,c
   544  000716  D7B0               	goto	l1340
   545  000718                     l1378:
   546                           
   547                           ;Motor_Control_4tab.c: 111: }
   548                           ;Motor_Control_4tab.c: 112: }
   549                           ;Motor_Control_4tab.c: 113: p=18;
   550  000718  0E12               	movlw	18
   551  00071A  6E32               	movwf	main@p,c
   552  00071C                     l1380:
   553                           
   554                           ;Motor_Control_4tab.c: 115: {
   555                           ;Motor_Control_4tab.c: 116: p = p-1;
   556  00071C  0432               	decf	main@p,w,c
   557  00071E  6E32               	movwf	main@p,c
   558                           
   559                           ;Motor_Control_4tab.c: 117: CCPR2L = duty[p];
   560  000720  5032               	movf	main@p,w,c
   561  000722  0D01               	mullw	1
   562  000724  0E1B               	movlw	low main@duty
   563  000726  24F3               	addwf	prodl,w,c
   564  000728  6ED9               	movwf	fsr2l,c
   565  00072A  0E00               	movlw	high main@duty
   566  00072C  20F4               	addwfc	prodh,w,c
   567  00072E  6EDA               	movwf	fsr2h,c
   568  000730  50DF               	movf	indf2,w,c
   569  000732  6EBB               	movwf	4027,c	;volatile
   570                           
   571                           ;Motor_Control_4tab.c: 118: for(i=0;i<5;i++)
   572  000734  0E00               	movlw	0
   573  000736  6E4B               	movwf	_i,c
   574  000738                     l1386:
   575  000738  0E04               	movlw	4
   576  00073A  644B               	cpfsgt	_i,c
   577  00073C  D001               	goto	l1390
   578  00073E  D03A               	goto	l1412
   579  000740                     l1390:
   580                           
   581                           ;Motor_Control_4tab.c: 119: {
   582                           ;Motor_Control_4tab.c: 120: (captured==0) ? (rev_s = 0): (rev_s = tclk/captured);
   583  000740  5049               	movf	_captured,w,c
   584  000742  104A               	iorwf	_captured+1,w,c
   585  000744  A4D8               	btfss	status,2,c
   586  000746  D005               	goto	l1394
   587  000748  0E00               	movlw	0
   588  00074A  6E31               	movwf	main@rev_s+1,c
   589  00074C  0E00               	movlw	0
   590  00074E  6E30               	movwf	main@rev_s,c
   591  000750  D011               	goto	l1396
   592  000752                     l1394:
   593  000752  C02D  F00F         	movff	main@tclk,___ltdiv@dividend
   594  000756  C02E  F010         	movff	main@tclk+1,___ltdiv@dividend+1
   595  00075A  C02F  F011         	movff	main@tclk+2,___ltdiv@dividend+2
   596  00075E  C049  F012         	movff	_captured,___ltdiv@divisor
   597  000762  C04A  F013         	movff	_captured+1,___ltdiv@divisor+1
   598  000766  6A14               	clrf	___ltdiv@divisor+2,c
   599  000768  EC62  F005         	call	___ltdiv	;wreg free
   600  00076C  C00F  F030         	movff	?___ltdiv,main@rev_s
   601  000770  C010  F031         	movff	?___ltdiv+1,main@rev_s+1
   602  000774                     l1396:
   603                           
   604                           ;Motor_Control_4tab.c: 121: captured = 0;
   605  000774  0E00               	movlw	0
   606  000776  6E4A               	movwf	_captured+1,c
   607  000778  0E00               	movlw	0
   608  00077A  6E49               	movwf	_captured,c
   609                           
   610                           ;Motor_Control_4tab.c: 122: lcd_cursor(9,0);
   611  00077C  0E00               	movlw	0
   612  00077E  6E14               	movwf	lcd_cursor@y,c
   613  000780  0E09               	movlw	9
   614  000782  EC4E  F006         	call	_lcd_cursor
   615                           
   616                           ;Motor_Control_4tab.c: 123: lcd_display_value(duty[p]);
   617  000786  5032               	movf	main@p,w,c
   618  000788  0D01               	mullw	1
   619  00078A  0E1B               	movlw	low main@duty
   620  00078C  24F3               	addwf	prodl,w,c
   621  00078E  6ED9               	movwf	fsr2l,c
   622  000790  0E00               	movlw	high main@duty
   623  000792  20F4               	addwfc	prodh,w,c
   624  000794  6EDA               	movwf	fsr2h,c
   625  000796  50DF               	movf	indf2,w,c
   626  000798  ECA3  F004         	call	_lcd_display_value
   627                           
   628                           ;Motor_Control_4tab.c: 125: lcd_cursor(9,1);
   629  00079C  0E01               	movlw	1
   630  00079E  6E14               	movwf	lcd_cursor@y,c
   631  0007A0  0E09               	movlw	9
   632  0007A2  EC4E  F006         	call	_lcd_cursor
   633                           
   634                           ;Motor_Control_4tab.c: 126: lcd_display_value(rev_s);
   635  0007A6  5030               	movf	main@rev_s,w,c
   636  0007A8  ECA3  F004         	call	_lcd_display_value
   637                           
   638                           ;Motor_Control_4tab.c: 128: delay_1s();
   639  0007AC  EC3E  F006         	call	_delay_1s	;wreg free
   640  0007B0  2A4B               	incf	_i,f,c
   641  0007B2  D7C2               	goto	l1386
   642  0007B4                     l1412:
   643                           
   644                           ;Motor_Control_4tab.c: 129: }
   645                           ;Motor_Control_4tab.c: 131: } while (p > 0);
   646  0007B4  5032               	movf	main@p,w,c
   647  0007B6  B4D8               	btfsc	status,2,c
   648  0007B8  D75D               	goto	l1338
   649  0007BA  D7B0               	goto	l1380
   650  0007BC                     __end_of_main:
   651                           	opt stack 0
   652                           tblptru	equ	0xFF8
   653                           tblptrh	equ	0xFF7
   654                           tblptrl	equ	0xFF6
   655                           tablat	equ	0xFF5
   656                           prodh	equ	0xFF4
   657                           prodl	equ	0xFF3
   658                           postinc0	equ	0xFEE
   659                           wreg	equ	0xFE8
   660                           postdec1	equ	0xFE5
   661                           plusw1	equ	0xFE3
   662                           fsr1l	equ	0xFE1
   663                           indf2	equ	0xFDF
   664                           plusw2	equ	0xFDB
   665                           fsr2h	equ	0xFDA
   666                           fsr2l	equ	0xFD9
   667                           status	equ	0xFD8
   668                           
   669 ;; *************** function _lcd_start *****************
   670 ;; Defined at:
   671 ;;		line 189 in file "../../LCD_library/lcdlib_2016.c"
   672 ;; Parameters:    Size  Location     Type
   673 ;;		None
   674 ;; Auto vars:     Size  Location     Type
   675 ;;  i               1   21[COMRAM] unsigned char 
   676 ;;  t               1    0        unsigned char 
   677 ;; Return value:  Size  Location     Type
   678 ;;                  1    wreg      unsigned char 
   679 ;; Registers used:
   680 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   681 ;; Tracked objects:
   682 ;;		On entry : 0/0
   683 ;;		On exit  : 0/0
   684 ;;		Unchanged: 0/0
   685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   686 ;;      Params:         0       0       0       0       0       0       0
   687 ;;      Locals:         1       0       0       0       0       0       0
   688 ;;      Temps:          1       0       0       0       0       0       0
   689 ;;      Totals:         2       0       0       0       0       0       0
   690 ;;Total ram usage:        2 bytes
   691 ;; Hardware stack levels used:    1
   692 ;; Hardware stack levels required when called:    4
   693 ;; This function calls:
   694 ;;		_lcd_clear
   695 ;;		_lcd_command
   696 ;; This function is called by:
   697 ;;		_main
   698 ;; This function uses a non-reentrant model
   699 ;;
   700                           
   701                           	psect	text1
   702  000BD4                     __ptext1:
   703                           	opt stack 0
   704  000BD4                     _lcd_start:
   705                           	opt stack 26
   706                           
   707                           ;lcdlib_2016.c: 191: unsigned char i, t ;
   708                           ;lcdlib_2016.c: 197: TRISD = (TRISD & 0xc0) ;
   709                           
   710                           ;incstack = 0
   711  000BD4  5095               	movf	3989,w,c	;volatile
   712  000BD6  0BC0               	andlw	192
   713  000BD8  6E95               	movwf	3989,c	;volatile
   714                           
   715                           ;lcdlib_2016.c: 202: _delay((unsigned long)((35)*(19660800/4000.0)));
   716  000BDA  0EE0               	movlw	224
   717  000BDC  6E15               	movwf	??_lcd_start& (0+255),c
   718  000BDE  0E6A               	movlw	106
   719  000BE0                     u727:
   720  000BE0  2EE8               	decfsz	wreg,f,c
   721  000BE2  D7FE               	goto	u727
   722  000BE4  2E15               	decfsz	??_lcd_start& (0+255),f,c
   723  000BE6  D7FC               	goto	u727
   724                           
   725                           ;lcdlib_2016.c: 203: for ( i=0 ; i < 5 ; i++ )
   726  000BE8  0E00               	movlw	0
   727  000BEA  6E16               	movwf	lcd_start@i,c
   728  000BEC                     l1254:
   729  000BEC  0E04               	movlw	4
   730  000BEE  6416               	cpfsgt	lcd_start@i,c
   731  000BF0  D001               	goto	l1258
   732  000BF2  D00E               	goto	l1264
   733  000BF4                     l1258:
   734                           
   735                           ;lcdlib_2016.c: 204: {
   736                           ;lcdlib_2016.c: 205: lcd_command ( lcd_init [i] ) ;
   737  000BF4  5016               	movf	lcd_start@i,w,c
   738  000BF6  0D01               	mullw	1
   739  000BF8  0E01               	movlw	low _lcd_init
   740  000BFA  24F3               	addwf	prodl,w,c
   741  000BFC  6EF6               	movwf	tblptrl,c
   742  000BFE  0E06               	movlw	high _lcd_init
   743  000C00  20F4               	addwfc	prodh,w,c
   744  000C02  6EF7               	movwf	tblptrh,c
   745  000C04                     	if	0	;There are less than 3 active tblptr bytes
   746  000C04                     	endif
   747  000C04  0008               	tblrd		*
   748  000C06  50F5               	movf	tablat,w,c
   749  000C08  EC6D  F006         	call	_lcd_command
   750  000C0C  2A16               	incf	lcd_start@i,f,c
   751  000C0E  D7EE               	goto	l1254
   752  000C10                     l1264:
   753                           
   754                           ;lcdlib_2016.c: 206: }
   755                           ;lcdlib_2016.c: 207: lcd_clear () ;
   756  000C10  EC27  F006         	call	_lcd_clear	;wreg free
   757  000C14  0012               	return	
   758  000C16                     __end_of_lcd_start:
   759                           	opt stack 0
   760                           tblptru	equ	0xFF8
   761                           tblptrh	equ	0xFF7
   762                           tblptrl	equ	0xFF6
   763                           tablat	equ	0xFF5
   764                           prodh	equ	0xFF4
   765                           prodl	equ	0xFF3
   766                           postinc0	equ	0xFEE
   767                           wreg	equ	0xFE8
   768                           postdec1	equ	0xFE5
   769                           plusw1	equ	0xFE3
   770                           fsr1l	equ	0xFE1
   771                           indf2	equ	0xFDF
   772                           plusw2	equ	0xFDB
   773                           fsr2h	equ	0xFDA
   774                           fsr2l	equ	0xFD9
   775                           status	equ	0xFD8
   776                           
   777 ;; *************** function _lcd_clear *****************
   778 ;; Defined at:
   779 ;;		line 131 in file "../../LCD_library/lcdlib_2016.c"
   780 ;; Parameters:    Size  Location     Type
   781 ;;		None
   782 ;; Auto vars:     Size  Location     Type
   783 ;;		None
   784 ;; Return value:  Size  Location     Type
   785 ;;                  1    wreg      unsigned char 
   786 ;; Registers used:
   787 ;;		wreg, status,2, status,0, cstack
   788 ;; Tracked objects:
   789 ;;		On entry : 0/0
   790 ;;		On exit  : 0/0
   791 ;;		Unchanged: 0/0
   792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   793 ;;      Params:         0       0       0       0       0       0       0
   794 ;;      Locals:         0       0       0       0       0       0       0
   795 ;;      Temps:          1       0       0       0       0       0       0
   796 ;;      Totals:         1       0       0       0       0       0       0
   797 ;;Total ram usage:        1 bytes
   798 ;; Hardware stack levels used:    1
   799 ;; Hardware stack levels required when called:    3
   800 ;; This function calls:
   801 ;;		_lcd_command
   802 ;; This function is called by:
   803 ;;		_lcd_start
   804 ;; This function uses a non-reentrant model
   805 ;;
   806                           
   807                           	psect	text2
   808  000C4E                     __ptext2:
   809                           	opt stack 0
   810  000C4E                     _lcd_clear:
   811                           	opt stack 26
   812                           
   813                           ;lcdlib_2016.c: 134: lcd_command ( 0x01 ) ;
   814                           
   815                           ;incstack = 0
   816  000C4E  0E01               	movlw	1
   817  000C50  EC6D  F006         	call	_lcd_command
   818                           
   819                           ;lcdlib_2016.c: 135: _delay((unsigned long)((2)*(19660800/4000.0)));
   820  000C54  0E0D               	movlw	13
   821  000C56  6E14               	movwf	??_lcd_clear& (0+255),c
   822  000C58  0EC3               	movlw	195
   823  000C5A                     u737:
   824  000C5A  2EE8               	decfsz	wreg,f,c
   825  000C5C  D7FE               	goto	u737
   826  000C5E  2E14               	decfsz	??_lcd_clear& (0+255),f,c
   827  000C60  D7FC               	goto	u737
   828  000C62  F000               	nop	
   829                           
   830                           ;lcdlib_2016.c: 138: lcd_command ( 0x02 ) ;
   831  000C64  0E02               	movlw	2
   832  000C66  EC6D  F006         	call	_lcd_command
   833                           
   834                           ;lcdlib_2016.c: 139: _delay((unsigned long)((2)*(19660800/4000.0)));
   835  000C6A  0E0D               	movlw	13
   836  000C6C  6E14               	movwf	??_lcd_clear& (0+255),c
   837  000C6E  0EC3               	movlw	195
   838  000C70                     u747:
   839  000C70  2EE8               	decfsz	wreg,f,c
   840  000C72  D7FE               	goto	u747
   841  000C74  2E14               	decfsz	??_lcd_clear& (0+255),f,c
   842  000C76  D7FC               	goto	u747
   843  000C78  F000               	nop	
   844  000C7A  0012               	return	
   845  000C7C                     __end_of_lcd_clear:
   846                           	opt stack 0
   847                           tblptru	equ	0xFF8
   848                           tblptrh	equ	0xFF7
   849                           tblptrl	equ	0xFF6
   850                           tablat	equ	0xFF5
   851                           prodh	equ	0xFF4
   852                           prodl	equ	0xFF3
   853                           postinc0	equ	0xFEE
   854                           wreg	equ	0xFE8
   855                           postdec1	equ	0xFE5
   856                           plusw1	equ	0xFE3
   857                           fsr1l	equ	0xFE1
   858                           indf2	equ	0xFDF
   859                           plusw2	equ	0xFDB
   860                           fsr2h	equ	0xFDA
   861                           fsr2l	equ	0xFD9
   862                           status	equ	0xFD8
   863                           
   864 ;; *************** function _lcd_print *****************
   865 ;; Defined at:
   866 ;;		line 215 in file "../../LCD_library/lcdlib_2016.c"
   867 ;; Parameters:    Size  Location     Type
   868 ;;  mess            2   19[COMRAM] PTR const unsigned char 
   869 ;;		 -> STR_2(6), STR_1(7), 
   870 ;; Auto vars:     Size  Location     Type
   871 ;;  i               1   23[COMRAM] unsigned char 
   872 ;; Return value:  Size  Location     Type
   873 ;;                  1    wreg      unsigned char 
   874 ;; Registers used:
   875 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   876 ;; Tracked objects:
   877 ;;		On entry : 0/0
   878 ;;		On exit  : 0/0
   879 ;;		Unchanged: 0/0
   880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   881 ;;      Params:         2       0       0       0       0       0       0
   882 ;;      Locals:         1       0       0       0       0       0       0
   883 ;;      Temps:          2       0       0       0       0       0       0
   884 ;;      Totals:         5       0       0       0       0       0       0
   885 ;;Total ram usage:        5 bytes
   886 ;; Hardware stack levels used:    1
   887 ;; Hardware stack levels required when called:    3
   888 ;; This function calls:
   889 ;;		_lcd_print_ch
   890 ;; This function is called by:
   891 ;;		_main
   892 ;; This function uses a non-reentrant model
   893 ;;
   894                           
   895                           	psect	text3
   896  000B2E                     __ptext3:
   897                           	opt stack 0
   898  000B2E                     _lcd_print:
   899                           	opt stack 27
   900                           
   901                           ;lcdlib_2016.c: 217: unsigned char i = 0 ;
   902                           
   903                           ;incstack = 0
   904  000B2E  0E00               	movlw	0
   905  000B30  6E18               	movwf	lcd_print@i,c
   906                           
   907                           ;lcdlib_2016.c: 224: while ( mess [i] != 0 )
   908  000B32  D013               	goto	l1274
   909  000B34                     l1270:
   910                           
   911                           ;lcdlib_2016.c: 225: {
   912                           ;lcdlib_2016.c: 226: lcd_print_ch ( mess[i] ) ;
   913  000B34  5018               	movf	lcd_print@i,w,c
   914  000B36  0D01               	mullw	1
   915  000B38  C014  F016         	movff	lcd_print@mess,??_lcd_print
   916  000B3C  C015  F017         	movff	lcd_print@mess+1,??_lcd_print+1
   917  000B40  50F3               	movf	prodl,w,c
   918  000B42  2616               	addwf	??_lcd_print,f,c
   919  000B44  50F4               	movf	prodh,w,c
   920  000B46  2217               	addwfc	??_lcd_print+1,f,c
   921  000B48  C016  FFF6         	movff	??_lcd_print,tblptrl
   922  000B4C  C017  FFF7         	movff	??_lcd_print+1,tblptrh
   923  000B50                     	if	0	;tblptru may be non-zero
   924  000B50                     	endif
   925  000B50                     	if	0	;tblptru may be non-zero
   926  000B50                     	endif
   927  000B50  0008               	tblrd		*
   928  000B52  50F5               	movf	tablat,w,c
   929  000B54  EC66  F006         	call	_lcd_print_ch
   930                           
   931                           ;lcdlib_2016.c: 227: i++ ;
   932  000B58  2A18               	incf	lcd_print@i,f,c
   933  000B5A                     l1274:
   934  000B5A  5018               	movf	lcd_print@i,w,c
   935  000B5C  0D01               	mullw	1
   936  000B5E  C014  F016         	movff	lcd_print@mess,??_lcd_print
   937  000B62  C015  F017         	movff	lcd_print@mess+1,??_lcd_print+1
   938  000B66  50F3               	movf	prodl,w,c
   939  000B68  2616               	addwf	??_lcd_print,f,c
   940  000B6A  50F4               	movf	prodh,w,c
   941  000B6C  2217               	addwfc	??_lcd_print+1,f,c
   942  000B6E  C016  FFF6         	movff	??_lcd_print,tblptrl
   943  000B72  C017  FFF7         	movff	??_lcd_print+1,tblptrh
   944  000B76                     	if	0	;tblptru may be non-zero
   945  000B76                     	endif
   946  000B76                     	if	0	;tblptru may be non-zero
   947  000B76                     	endif
   948  000B76  0008               	tblrd		*
   949  000B78  50F5               	movf	tablat,w,c
   950  000B7A  0900               	iorlw	0
   951  000B7C  B4D8               	btfsc	status,2,c
   952  000B7E  0012               	return	
   953  000B80  D7D9               	goto	l1270
   954  000B82                     __end_of_lcd_print:
   955                           	opt stack 0
   956                           tblptru	equ	0xFF8
   957                           tblptrh	equ	0xFF7
   958                           tblptrl	equ	0xFF6
   959                           tablat	equ	0xFF5
   960                           prodh	equ	0xFF4
   961                           prodl	equ	0xFF3
   962                           postinc0	equ	0xFEE
   963                           wreg	equ	0xFE8
   964                           postdec1	equ	0xFE5
   965                           plusw1	equ	0xFE3
   966                           fsr1l	equ	0xFE1
   967                           indf2	equ	0xFDF
   968                           plusw2	equ	0xFDB
   969                           fsr2h	equ	0xFDA
   970                           fsr2l	equ	0xFD9
   971                           status	equ	0xFD8
   972                           
   973 ;; *************** function _lcd_display_value *****************
   974 ;; Defined at:
   975 ;;		line 244 in file "../../LCD_library/lcdlib_2016.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;  value           1    wreg     unsigned char 
   978 ;; Auto vars:     Size  Location     Type
   979 ;;  value           1   25[COMRAM] unsigned char 
   980 ;;  units           1   24[COMRAM] unsigned char 
   981 ;;  tens            1   23[COMRAM] unsigned char 
   982 ;;  hunds           1   22[COMRAM] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;		None               void
   985 ;; Registers used:
   986 ;;		wreg, status,2, status,0, cstack
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   992 ;;      Params:         0       0       0       0       0       0       0
   993 ;;      Locals:         4       0       0       0       0       0       0
   994 ;;      Temps:          0       0       0       0       0       0       0
   995 ;;      Totals:         4       0       0       0       0       0       0
   996 ;;Total ram usage:        4 bytes
   997 ;; Hardware stack levels used:    1
   998 ;; Hardware stack levels required when called:    3
   999 ;; This function calls:
  1000 ;;		___awdiv
  1001 ;;		___awmod
  1002 ;;		_lcd_print_ch
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;; This function uses a non-reentrant model
  1006 ;;
  1007                           
  1008                           	psect	text4
  1009  000946                     __ptext4:
  1010                           	opt stack 0
  1011  000946                     _lcd_display_value:
  1012                           	opt stack 27
  1013                           
  1014                           ;incstack = 0
  1015                           ;lcd_display_value@value stored from wreg
  1016  000946  6E1A               	movwf	lcd_display_value@value,c
  1017                           
  1018                           ;lcdlib_2016.c: 246: unsigned char hunds, tens, units ;
  1019                           ;lcdlib_2016.c: 250: units = value % 10 ;
  1020  000948  C01A  F00F         	movff	lcd_display_value@value,___awmod@dividend
  1021  00094C  6A10               	clrf	___awmod@dividend+1,c
  1022  00094E  0E00               	movlw	0
  1023  000950  6E12               	movwf	___awmod@divisor+1,c
  1024  000952  0E0A               	movlw	10
  1025  000954  6E11               	movwf	___awmod@divisor,c
  1026  000956  EC2A  F005         	call	___awmod	;wreg free
  1027  00095A  500F               	movf	?___awmod,w,c
  1028  00095C  6E19               	movwf	lcd_display_value@units,c
  1029                           
  1030                           ;lcdlib_2016.c: 251: value = value / 10 ;
  1031  00095E  C01A  F00F         	movff	lcd_display_value@value,___awdiv@dividend
  1032  000962  6A10               	clrf	___awdiv@dividend+1,c
  1033  000964  0E00               	movlw	0
  1034  000966  6E12               	movwf	___awdiv@divisor+1,c
  1035  000968  0E0A               	movlw	10
  1036  00096A  6E11               	movwf	___awdiv@divisor,c
  1037  00096C  ECE8  F004         	call	___awdiv	;wreg free
  1038  000970  500F               	movf	?___awdiv,w,c
  1039  000972  6E1A               	movwf	lcd_display_value@value,c
  1040                           
  1041                           ;lcdlib_2016.c: 252: tens = value % 10 ;
  1042  000974  C01A  F00F         	movff	lcd_display_value@value,___awmod@dividend
  1043  000978  6A10               	clrf	___awmod@dividend+1,c
  1044  00097A  0E00               	movlw	0
  1045  00097C  6E12               	movwf	___awmod@divisor+1,c
  1046  00097E  0E0A               	movlw	10
  1047  000980  6E11               	movwf	___awmod@divisor,c
  1048  000982  EC2A  F005         	call	___awmod	;wreg free
  1049  000986  500F               	movf	?___awmod,w,c
  1050  000988  6E18               	movwf	lcd_display_value@tens,c
  1051                           
  1052                           ;lcdlib_2016.c: 253: value = value / 10 ;
  1053  00098A  C01A  F00F         	movff	lcd_display_value@value,___awdiv@dividend
  1054  00098E  6A10               	clrf	___awdiv@dividend+1,c
  1055  000990  0E00               	movlw	0
  1056  000992  6E12               	movwf	___awdiv@divisor+1,c
  1057  000994  0E0A               	movlw	10
  1058  000996  6E11               	movwf	___awdiv@divisor,c
  1059  000998  ECE8  F004         	call	___awdiv	;wreg free
  1060  00099C  500F               	movf	?___awdiv,w,c
  1061  00099E  6E1A               	movwf	lcd_display_value@value,c
  1062                           
  1063                           ;lcdlib_2016.c: 254: hunds = value % 10 ;
  1064  0009A0  C01A  F00F         	movff	lcd_display_value@value,___awmod@dividend
  1065  0009A4  6A10               	clrf	___awmod@dividend+1,c
  1066  0009A6  0E00               	movlw	0
  1067  0009A8  6E12               	movwf	___awmod@divisor+1,c
  1068  0009AA  0E0A               	movlw	10
  1069  0009AC  6E11               	movwf	___awmod@divisor,c
  1070  0009AE  EC2A  F005         	call	___awmod	;wreg free
  1071  0009B2  500F               	movf	?___awmod,w,c
  1072  0009B4  6E17               	movwf	lcd_display_value@hunds,c
  1073                           
  1074                           ;lcdlib_2016.c: 260: lcd_print_ch ( '0' + hunds ) ;
  1075  0009B6  5017               	movf	lcd_display_value@hunds,w,c
  1076  0009B8  0F30               	addlw	48
  1077  0009BA  EC66  F006         	call	_lcd_print_ch
  1078                           
  1079                           ;lcdlib_2016.c: 261: lcd_print_ch ( '0' + tens ) ;
  1080  0009BE  5018               	movf	lcd_display_value@tens,w,c
  1081  0009C0  0F30               	addlw	48
  1082  0009C2  EC66  F006         	call	_lcd_print_ch
  1083                           
  1084                           ;lcdlib_2016.c: 262: lcd_print_ch ( '0' + units ) ;
  1085  0009C6  5019               	movf	lcd_display_value@units,w,c
  1086  0009C8  0F30               	addlw	48
  1087  0009CA  EC66  F006         	call	_lcd_print_ch
  1088  0009CE  0012               	return		;funcret
  1089  0009D0                     __end_of_lcd_display_value:
  1090                           	opt stack 0
  1091                           tblptru	equ	0xFF8
  1092                           tblptrh	equ	0xFF7
  1093                           tblptrl	equ	0xFF6
  1094                           tablat	equ	0xFF5
  1095                           prodh	equ	0xFF4
  1096                           prodl	equ	0xFF3
  1097                           postinc0	equ	0xFEE
  1098                           wreg	equ	0xFE8
  1099                           postdec1	equ	0xFE5
  1100                           plusw1	equ	0xFE3
  1101                           fsr1l	equ	0xFE1
  1102                           indf2	equ	0xFDF
  1103                           plusw2	equ	0xFDB
  1104                           fsr2h	equ	0xFDA
  1105                           fsr2l	equ	0xFD9
  1106                           status	equ	0xFD8
  1107                           
  1108 ;; *************** function _lcd_print_ch *****************
  1109 ;; Defined at:
  1110 ;;		line 115 in file "../../LCD_library/lcdlib_2016.c"
  1111 ;; Parameters:    Size  Location     Type
  1112 ;;  in              1    wreg     unsigned char 
  1113 ;; Auto vars:     Size  Location     Type
  1114 ;;  in              1   18[COMRAM] unsigned char 
  1115 ;; Return value:  Size  Location     Type
  1116 ;;                  1    wreg      unsigned char 
  1117 ;; Registers used:
  1118 ;;		wreg, status,2, status,0, cstack
  1119 ;; Tracked objects:
  1120 ;;		On entry : 0/0
  1121 ;;		On exit  : 0/0
  1122 ;;		Unchanged: 0/0
  1123 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1124 ;;      Params:         0       0       0       0       0       0       0
  1125 ;;      Locals:         1       0       0       0       0       0       0
  1126 ;;      Temps:          0       0       0       0       0       0       0
  1127 ;;      Totals:         1       0       0       0       0       0       0
  1128 ;;Total ram usage:        1 bytes
  1129 ;; Hardware stack levels used:    1
  1130 ;; Hardware stack levels required when called:    2
  1131 ;; This function calls:
  1132 ;;		_lcd_raw_send
  1133 ;; This function is called by:
  1134 ;;		_lcd_print
  1135 ;;		_lcd_display_value
  1136 ;;		_lcd_display_int_value
  1137 ;; This function uses a non-reentrant model
  1138 ;;
  1139                           
  1140                           	psect	text5
  1141  000CCC                     __ptext5:
  1142                           	opt stack 0
  1143  000CCC                     _lcd_print_ch:
  1144                           	opt stack 27
  1145                           
  1146                           ;incstack = 0
  1147                           ;lcd_print_ch@in stored from wreg
  1148  000CCC  6E13               	movwf	lcd_print_ch@in,c
  1149                           
  1150                           ;lcdlib_2016.c: 118: lcd_raw_send ( in, 0x01 ) ;
  1151  000CCE  0E01               	movlw	1
  1152  000CD0  6E0F               	movwf	lcd_raw_send@RS,c
  1153  000CD2  5013               	movf	lcd_print_ch@in,w,c
  1154  000CD4  ECDE  F003         	call	_lcd_raw_send
  1155  000CD8  0012               	return	
  1156  000CDA                     __end_of_lcd_print_ch:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           tblptrh	equ	0xFF7
  1160                           tblptrl	equ	0xFF6
  1161                           tablat	equ	0xFF5
  1162                           prodh	equ	0xFF4
  1163                           prodl	equ	0xFF3
  1164                           postinc0	equ	0xFEE
  1165                           wreg	equ	0xFE8
  1166                           postdec1	equ	0xFE5
  1167                           plusw1	equ	0xFE3
  1168                           fsr1l	equ	0xFE1
  1169                           indf2	equ	0xFDF
  1170                           plusw2	equ	0xFDB
  1171                           fsr2h	equ	0xFDA
  1172                           fsr2l	equ	0xFD9
  1173                           status	equ	0xFD8
  1174                           
  1175 ;; *************** function ___awmod *****************
  1176 ;; Defined at:
  1177 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
  1178 ;; Parameters:    Size  Location     Type
  1179 ;;  dividend        2   14[COMRAM] int 
  1180 ;;  divisor         2   16[COMRAM] int 
  1181 ;; Auto vars:     Size  Location     Type
  1182 ;;  sign            1   19[COMRAM] unsigned char 
  1183 ;;  counter         1   18[COMRAM] unsigned char 
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  2   14[COMRAM] int 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1193 ;;      Params:         4       0       0       0       0       0       0
  1194 ;;      Locals:         2       0       0       0       0       0       0
  1195 ;;      Temps:          0       0       0       0       0       0       0
  1196 ;;      Totals:         6       0       0       0       0       0       0
  1197 ;;Total ram usage:        6 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    1
  1200 ;; This function calls:
  1201 ;;		Nothing
  1202 ;; This function is called by:
  1203 ;;		_lcd_display_value
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           	psect	text6
  1208  000A54                     __ptext6:
  1209                           	opt stack 0
  1210  000A54                     ___awmod:
  1211                           	opt stack 28
  1212                           
  1213                           ;incstack = 0
  1214  000A54  0E00               	movlw	0
  1215  000A56  6E14               	movwf	___awmod@sign,c
  1216  000A58  AE10               	btfss	___awmod@dividend+1,7,c
  1217  000A5A  D006               	goto	l1210
  1218  000A5C  6C0F               	negf	___awmod@dividend,c
  1219  000A5E  1E10               	comf	___awmod@dividend+1,f,c
  1220  000A60  B0D8               	btfsc	status,0,c
  1221  000A62  2A10               	incf	___awmod@dividend+1,f,c
  1222  000A64  0E01               	movlw	1
  1223  000A66  6E14               	movwf	___awmod@sign,c
  1224  000A68                     l1210:
  1225  000A68  AE12               	btfss	___awmod@divisor+1,7,c
  1226  000A6A  D004               	goto	l1214
  1227  000A6C  6C11               	negf	___awmod@divisor,c
  1228  000A6E  1E12               	comf	___awmod@divisor+1,f,c
  1229  000A70  B0D8               	btfsc	status,0,c
  1230  000A72  2A12               	incf	___awmod@divisor+1,f,c
  1231  000A74                     l1214:
  1232  000A74  5011               	movf	___awmod@divisor,w,c
  1233  000A76  1012               	iorwf	___awmod@divisor+1,w,c
  1234  000A78  B4D8               	btfsc	status,2,c
  1235  000A7A  D018               	goto	l1230
  1236  000A7C  0E01               	movlw	1
  1237  000A7E  6E13               	movwf	___awmod@counter,c
  1238  000A80  D004               	goto	l1220
  1239  000A82                     l1218:
  1240  000A82  90D8               	bcf	status,0,c
  1241  000A84  3611               	rlcf	___awmod@divisor,f,c
  1242  000A86  3612               	rlcf	___awmod@divisor+1,f,c
  1243  000A88  2A13               	incf	___awmod@counter,f,c
  1244  000A8A                     l1220:
  1245  000A8A  AE12               	btfss	___awmod@divisor+1,7,c
  1246  000A8C  D7FA               	goto	l1218
  1247  000A8E                     l1222:
  1248  000A8E  5011               	movf	___awmod@divisor,w,c
  1249  000A90  5C0F               	subwf	___awmod@dividend,w,c
  1250  000A92  5012               	movf	___awmod@divisor+1,w,c
  1251  000A94  5810               	subwfb	___awmod@dividend+1,w,c
  1252  000A96  A0D8               	btfss	status,0,c
  1253  000A98  D004               	goto	l1226
  1254  000A9A  5011               	movf	___awmod@divisor,w,c
  1255  000A9C  5E0F               	subwf	___awmod@dividend,f,c
  1256  000A9E  5012               	movf	___awmod@divisor+1,w,c
  1257  000AA0  5A10               	subwfb	___awmod@dividend+1,f,c
  1258  000AA2                     l1226:
  1259  000AA2  90D8               	bcf	status,0,c
  1260  000AA4  3212               	rrcf	___awmod@divisor+1,f,c
  1261  000AA6  3211               	rrcf	___awmod@divisor,f,c
  1262  000AA8  2E13               	decfsz	___awmod@counter,f,c
  1263  000AAA  D7F1               	goto	l1222
  1264  000AAC                     l1230:
  1265  000AAC  5014               	movf	___awmod@sign,w,c
  1266  000AAE  B4D8               	btfsc	status,2,c
  1267  000AB0  D004               	goto	l1234
  1268  000AB2  6C0F               	negf	___awmod@dividend,c
  1269  000AB4  1E10               	comf	___awmod@dividend+1,f,c
  1270  000AB6  B0D8               	btfsc	status,0,c
  1271  000AB8  2A10               	incf	___awmod@dividend+1,f,c
  1272  000ABA                     l1234:
  1273  000ABA  C00F  F00F         	movff	___awmod@dividend,?___awmod
  1274  000ABE  C010  F010         	movff	___awmod@dividend+1,?___awmod+1
  1275  000AC2  0012               	return	
  1276  000AC4                     __end_of___awmod:
  1277                           	opt stack 0
  1278                           tblptru	equ	0xFF8
  1279                           tblptrh	equ	0xFF7
  1280                           tblptrl	equ	0xFF6
  1281                           tablat	equ	0xFF5
  1282                           prodh	equ	0xFF4
  1283                           prodl	equ	0xFF3
  1284                           postinc0	equ	0xFEE
  1285                           wreg	equ	0xFE8
  1286                           postdec1	equ	0xFE5
  1287                           plusw1	equ	0xFE3
  1288                           fsr1l	equ	0xFE1
  1289                           indf2	equ	0xFDF
  1290                           plusw2	equ	0xFDB
  1291                           fsr2h	equ	0xFDA
  1292                           fsr2l	equ	0xFD9
  1293                           status	equ	0xFD8
  1294                           
  1295 ;; *************** function ___awdiv *****************
  1296 ;; Defined at:
  1297 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1298 ;; Parameters:    Size  Location     Type
  1299 ;;  dividend        2   14[COMRAM] int 
  1300 ;;  divisor         2   16[COMRAM] int 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;  quotient        2   20[COMRAM] int 
  1303 ;;  sign            1   19[COMRAM] unsigned char 
  1304 ;;  counter         1   18[COMRAM] unsigned char 
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  2   14[COMRAM] int 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1314 ;;      Params:         4       0       0       0       0       0       0
  1315 ;;      Locals:         4       0       0       0       0       0       0
  1316 ;;      Temps:          0       0       0       0       0       0       0
  1317 ;;      Totals:         8       0       0       0       0       0       0
  1318 ;;Total ram usage:        8 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    1
  1321 ;; This function calls:
  1322 ;;		Nothing
  1323 ;; This function is called by:
  1324 ;;		_lcd_display_value
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           	psect	text7
  1329  0009D0                     __ptext7:
  1330                           	opt stack 0
  1331  0009D0                     ___awdiv:
  1332                           	opt stack 28
  1333                           
  1334                           ;incstack = 0
  1335  0009D0  0E00               	movlw	0
  1336  0009D2  6E14               	movwf	___awdiv@sign,c
  1337  0009D4  AE12               	btfss	___awdiv@divisor+1,7,c
  1338  0009D6  D006               	goto	l1166
  1339  0009D8  6C11               	negf	___awdiv@divisor,c
  1340  0009DA  1E12               	comf	___awdiv@divisor+1,f,c
  1341  0009DC  B0D8               	btfsc	status,0,c
  1342  0009DE  2A12               	incf	___awdiv@divisor+1,f,c
  1343  0009E0  0E01               	movlw	1
  1344  0009E2  6E14               	movwf	___awdiv@sign,c
  1345  0009E4                     l1166:
  1346  0009E4  AE10               	btfss	___awdiv@dividend+1,7,c
  1347  0009E6  D006               	goto	l1172
  1348  0009E8  6C0F               	negf	___awdiv@dividend,c
  1349  0009EA  1E10               	comf	___awdiv@dividend+1,f,c
  1350  0009EC  B0D8               	btfsc	status,0,c
  1351  0009EE  2A10               	incf	___awdiv@dividend+1,f,c
  1352  0009F0  0E01               	movlw	1
  1353  0009F2  1A14               	xorwf	___awdiv@sign,f,c
  1354  0009F4                     l1172:
  1355  0009F4  0E00               	movlw	0
  1356  0009F6  6E16               	movwf	___awdiv@quotient+1,c
  1357  0009F8  0E00               	movlw	0
  1358  0009FA  6E15               	movwf	___awdiv@quotient,c
  1359  0009FC  5011               	movf	___awdiv@divisor,w,c
  1360  0009FE  1012               	iorwf	___awdiv@divisor+1,w,c
  1361  000A00  B4D8               	btfsc	status,2,c
  1362  000A02  D01C               	goto	l1194
  1363  000A04  0E01               	movlw	1
  1364  000A06  6E13               	movwf	___awdiv@counter,c
  1365  000A08  D004               	goto	l1180
  1366  000A0A                     l1178:
  1367  000A0A  90D8               	bcf	status,0,c
  1368  000A0C  3611               	rlcf	___awdiv@divisor,f,c
  1369  000A0E  3612               	rlcf	___awdiv@divisor+1,f,c
  1370  000A10  2A13               	incf	___awdiv@counter,f,c
  1371  000A12                     l1180:
  1372  000A12  AE12               	btfss	___awdiv@divisor+1,7,c
  1373  000A14  D7FA               	goto	l1178
  1374  000A16                     l1182:
  1375  000A16  90D8               	bcf	status,0,c
  1376  000A18  3615               	rlcf	___awdiv@quotient,f,c
  1377  000A1A  3616               	rlcf	___awdiv@quotient+1,f,c
  1378  000A1C  5011               	movf	___awdiv@divisor,w,c
  1379  000A1E  5C0F               	subwf	___awdiv@dividend,w,c
  1380  000A20  5012               	movf	___awdiv@divisor+1,w,c
  1381  000A22  5810               	subwfb	___awdiv@dividend+1,w,c
  1382  000A24  A0D8               	btfss	status,0,c
  1383  000A26  D005               	goto	l1190
  1384  000A28  5011               	movf	___awdiv@divisor,w,c
  1385  000A2A  5E0F               	subwf	___awdiv@dividend,f,c
  1386  000A2C  5012               	movf	___awdiv@divisor+1,w,c
  1387  000A2E  5A10               	subwfb	___awdiv@dividend+1,f,c
  1388  000A30  8015               	bsf	___awdiv@quotient,0,c
  1389  000A32                     l1190:
  1390  000A32  90D8               	bcf	status,0,c
  1391  000A34  3212               	rrcf	___awdiv@divisor+1,f,c
  1392  000A36  3211               	rrcf	___awdiv@divisor,f,c
  1393  000A38  2E13               	decfsz	___awdiv@counter,f,c
  1394  000A3A  D7ED               	goto	l1182
  1395  000A3C                     l1194:
  1396  000A3C  5014               	movf	___awdiv@sign,w,c
  1397  000A3E  B4D8               	btfsc	status,2,c
  1398  000A40  D004               	goto	l1198
  1399  000A42  6C15               	negf	___awdiv@quotient,c
  1400  000A44  1E16               	comf	___awdiv@quotient+1,f,c
  1401  000A46  B0D8               	btfsc	status,0,c
  1402  000A48  2A16               	incf	___awdiv@quotient+1,f,c
  1403  000A4A                     l1198:
  1404  000A4A  C015  F00F         	movff	___awdiv@quotient,?___awdiv
  1405  000A4E  C016  F010         	movff	___awdiv@quotient+1,?___awdiv+1
  1406  000A52  0012               	return	
  1407  000A54                     __end_of___awdiv:
  1408                           	opt stack 0
  1409                           tblptru	equ	0xFF8
  1410                           tblptrh	equ	0xFF7
  1411                           tblptrl	equ	0xFF6
  1412                           tablat	equ	0xFF5
  1413                           prodh	equ	0xFF4
  1414                           prodl	equ	0xFF3
  1415                           postinc0	equ	0xFEE
  1416                           wreg	equ	0xFE8
  1417                           postdec1	equ	0xFE5
  1418                           plusw1	equ	0xFE3
  1419                           fsr1l	equ	0xFE1
  1420                           indf2	equ	0xFDF
  1421                           plusw2	equ	0xFDB
  1422                           fsr2h	equ	0xFDA
  1423                           fsr2l	equ	0xFD9
  1424                           status	equ	0xFD8
  1425                           
  1426 ;; *************** function _lcd_cursor *****************
  1427 ;; Defined at:
  1428 ;;		line 144 in file "../../LCD_library/lcdlib_2016.c"
  1429 ;; Parameters:    Size  Location     Type
  1430 ;;  x               1    wreg     unsigned char 
  1431 ;;  y               1   19[COMRAM] unsigned char 
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;  x               1   20[COMRAM] unsigned char 
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      unsigned char 
  1436 ;; Registers used:
  1437 ;;		wreg, status,2, status,0, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1443 ;;      Params:         1       0       0       0       0       0       0
  1444 ;;      Locals:         1       0       0       0       0       0       0
  1445 ;;      Temps:          0       0       0       0       0       0       0
  1446 ;;      Totals:         2       0       0       0       0       0       0
  1447 ;;Total ram usage:        2 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    3
  1450 ;; This function calls:
  1451 ;;		_lcd_command
  1452 ;; This function is called by:
  1453 ;;		_main
  1454 ;; This function uses a non-reentrant model
  1455 ;;
  1456                           
  1457                           	psect	text8
  1458  000C9C                     __ptext8:
  1459                           	opt stack 0
  1460  000C9C                     _lcd_cursor:
  1461                           	opt stack 27
  1462                           
  1463                           ;incstack = 0
  1464                           ;lcd_cursor@x stored from wreg
  1465  000C9C  6E15               	movwf	lcd_cursor@x,c
  1466                           
  1467                           ;lcdlib_2016.c: 153: if ( y==0 )
  1468  000C9E  5014               	movf	lcd_cursor@y,w,c
  1469  000CA0  A4D8               	btfss	status,2,c
  1470  000CA2  D002               	goto	l1242
  1471                           
  1472                           ;lcdlib_2016.c: 154: {
  1473                           ;lcdlib_2016.c: 156: y=0x80 ;
  1474  000CA4  0E80               	movlw	128
  1475  000CA6  D001               	goto	L1
  1476  000CA8                     l1242:
  1477                           
  1478                           ;lcdlib_2016.c: 158: else
  1479                           ;lcdlib_2016.c: 159: {
  1480                           ;lcdlib_2016.c: 161: y=0xc0 ;
  1481  000CA8  0EC0               	movlw	192
  1482  000CAA                     L1:
  1483  000CAA  6E14               	movwf	lcd_cursor@y,c
  1484                           
  1485                           ;lcdlib_2016.c: 162: }
  1486                           ;lcdlib_2016.c: 164: lcd_command ( y+x ) ;
  1487  000CAC  5014               	movf	lcd_cursor@y,w,c
  1488  000CAE  2415               	addwf	lcd_cursor@x,w,c
  1489  000CB0  EC6D  F006         	call	_lcd_command
  1490  000CB4  0012               	return	
  1491  000CB6                     __end_of_lcd_cursor:
  1492                           	opt stack 0
  1493                           tblptru	equ	0xFF8
  1494                           tblptrh	equ	0xFF7
  1495                           tblptrl	equ	0xFF6
  1496                           tablat	equ	0xFF5
  1497                           prodh	equ	0xFF4
  1498                           prodl	equ	0xFF3
  1499                           postinc0	equ	0xFEE
  1500                           wreg	equ	0xFE8
  1501                           postdec1	equ	0xFE5
  1502                           plusw1	equ	0xFE3
  1503                           fsr1l	equ	0xFE1
  1504                           indf2	equ	0xFDF
  1505                           plusw2	equ	0xFDB
  1506                           fsr2h	equ	0xFDA
  1507                           fsr2l	equ	0xFD9
  1508                           status	equ	0xFD8
  1509                           
  1510 ;; *************** function _lcd_command *****************
  1511 ;; Defined at:
  1512 ;;		line 123 in file "../../LCD_library/lcdlib_2016.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;  in              1    wreg     unsigned char 
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;  in              1   18[COMRAM] unsigned char 
  1517 ;; Return value:  Size  Location     Type
  1518 ;;		None               void
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0, cstack
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         0       0       0       0       0       0       0
  1527 ;;      Locals:         1       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0
  1529 ;;      Totals:         1       0       0       0       0       0       0
  1530 ;;Total ram usage:        1 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    2
  1533 ;; This function calls:
  1534 ;;		_lcd_raw_send
  1535 ;; This function is called by:
  1536 ;;		_lcd_clear
  1537 ;;		_lcd_cursor
  1538 ;;		_lcd_start
  1539 ;;		_lcd_cursor_on
  1540 ;;		_lcd_cursor_off
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           	psect	text9
  1545  000CDA                     __ptext9:
  1546                           	opt stack 0
  1547  000CDA                     _lcd_command:
  1548                           	opt stack 27
  1549                           
  1550                           ;incstack = 0
  1551                           ;lcd_command@in stored from wreg
  1552  000CDA  6E13               	movwf	lcd_command@in,c
  1553                           
  1554                           ;lcdlib_2016.c: 125: lcd_raw_send ( in, 0x00 ) ;
  1555  000CDC  0E00               	movlw	0
  1556  000CDE  6E0F               	movwf	lcd_raw_send@RS,c
  1557  000CE0  5013               	movf	lcd_command@in,w,c
  1558  000CE2  ECDE  F003         	call	_lcd_raw_send
  1559  000CE6  0012               	return		;funcret
  1560  000CE8                     __end_of_lcd_command:
  1561                           	opt stack 0
  1562                           tblptru	equ	0xFF8
  1563                           tblptrh	equ	0xFF7
  1564                           tblptrl	equ	0xFF6
  1565                           tablat	equ	0xFF5
  1566                           prodh	equ	0xFF4
  1567                           prodl	equ	0xFF3
  1568                           postinc0	equ	0xFEE
  1569                           wreg	equ	0xFE8
  1570                           postdec1	equ	0xFE5
  1571                           plusw1	equ	0xFE3
  1572                           fsr1l	equ	0xFE1
  1573                           indf2	equ	0xFDF
  1574                           plusw2	equ	0xFDB
  1575                           fsr2h	equ	0xFDA
  1576                           fsr2l	equ	0xFD9
  1577                           status	equ	0xFD8
  1578                           
  1579 ;; *************** function _lcd_raw_send *****************
  1580 ;; Defined at:
  1581 ;;		line 74 in file "../../LCD_library/lcdlib_2016.c"
  1582 ;; Parameters:    Size  Location     Type
  1583 ;;  in              1    wreg     unsigned char 
  1584 ;;  RS              1   14[COMRAM] unsigned char 
  1585 ;; Auto vars:     Size  Location     Type
  1586 ;;  in              1   17[COMRAM] unsigned char 
  1587 ;; Return value:  Size  Location     Type
  1588 ;;		None               void
  1589 ;; Registers used:
  1590 ;;		wreg, status,2, status,0
  1591 ;; Tracked objects:
  1592 ;;		On entry : 0/0
  1593 ;;		On exit  : 0/0
  1594 ;;		Unchanged: 0/0
  1595 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1596 ;;      Params:         1       0       0       0       0       0       0
  1597 ;;      Locals:         1       0       0       0       0       0       0
  1598 ;;      Temps:          2       0       0       0       0       0       0
  1599 ;;      Totals:         4       0       0       0       0       0       0
  1600 ;;Total ram usage:        4 bytes
  1601 ;; Hardware stack levels used:    1
  1602 ;; Hardware stack levels required when called:    1
  1603 ;; This function calls:
  1604 ;;		Nothing
  1605 ;; This function is called by:
  1606 ;;		_lcd_print_ch
  1607 ;;		_lcd_command
  1608 ;; This function uses a non-reentrant model
  1609 ;;
  1610                           
  1611                           	psect	text10
  1612  0007BC                     __ptext10:
  1613                           	opt stack 0
  1614  0007BC                     _lcd_raw_send:
  1615                           	opt stack 27
  1616                           
  1617                           ;incstack = 0
  1618                           ;lcd_raw_send@in stored from wreg
  1619  0007BC  6E12               	movwf	lcd_raw_send@in,c
  1620                           
  1621                           ;lcdlib_2016.c: 78: LATDbits.LD0 = in >> 4;
  1622  0007BE  C012  F010         	movff	lcd_raw_send@in,??_lcd_raw_send
  1623  0007C2  3A10               	swapf	??_lcd_raw_send,f,c
  1624  0007C4  0E0F               	movlw	15
  1625  0007C6  1610               	andwf	??_lcd_raw_send,f,c
  1626  0007C8  508C               	movf	3980,w,c	;volatile
  1627  0007CA  1810               	xorwf	??_lcd_raw_send,w,c
  1628  0007CC  0BFE               	andlw	-2
  1629  0007CE  1810               	xorwf	??_lcd_raw_send,w,c
  1630  0007D0  6E8C               	movwf	3980,c	;volatile
  1631                           
  1632                           ;lcdlib_2016.c: 79: LATDbits.LD1 = in >> 5;
  1633  0007D2  C012  F010         	movff	lcd_raw_send@in,??_lcd_raw_send
  1634  0007D6  0E05               	movlw	5
  1635  0007D8  6E11               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1636  0007DA                     u385:
  1637  0007DA  90D8               	bcf	status,0,c
  1638  0007DC  3210               	rrcf	??_lcd_raw_send,f,c
  1639  0007DE  2E11               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1640  0007E0  D7FC               	goto	u385
  1641  0007E2  4610               	rlncf	??_lcd_raw_send,f,c
  1642  0007E4  508C               	movf	3980,w,c	;volatile
  1643  0007E6  1810               	xorwf	??_lcd_raw_send,w,c
  1644  0007E8  0BFD               	andlw	-3
  1645  0007EA  1810               	xorwf	??_lcd_raw_send,w,c
  1646  0007EC  6E8C               	movwf	3980,c	;volatile
  1647                           
  1648                           ;lcdlib_2016.c: 80: LATDbits.LD2 = in >> 6;
  1649  0007EE  C012  F010         	movff	lcd_raw_send@in,??_lcd_raw_send
  1650  0007F2  0E06               	movlw	6
  1651  0007F4  6E11               	movwf	(??_lcd_raw_send+1)& (0+255),c
  1652  0007F6                     u395:
  1653  0007F6  90D8               	bcf	status,0,c
  1654  0007F8  3210               	rrcf	??_lcd_raw_send,f,c
  1655  0007FA  2E11               	decfsz	(??_lcd_raw_send+1)& (0+255),f,c
  1656  0007FC  D7FC               	goto	u395
  1657  0007FE  4610               	rlncf	??_lcd_raw_send,f,c
  1658  000800  4610               	rlncf	??_lcd_raw_send,f,c
  1659  000802  508C               	movf	3980,w,c	;volatile
  1660  000804  1810               	xorwf	??_lcd_raw_send,w,c
  1661  000806  0BFB               	andlw	-5
  1662  000808  1810               	xorwf	??_lcd_raw_send,w,c
  1663  00080A  6E8C               	movwf	3980,c	;volatile
  1664                           
  1665                           ;lcdlib_2016.c: 81: LATDbits.LD3 = in >> 7;
  1666  00080C  6A10               	clrf	??_lcd_raw_send& (0+255),c
  1667  00080E  AE12               	btfss	lcd_raw_send@in,7,c
  1668  000810  D001               	bra	u405
  1669  000812  2A10               	incf	??_lcd_raw_send& (0+255),f,c
  1670  000814                     u405:
  1671  000814  4610               	rlncf	??_lcd_raw_send,f,c
  1672  000816  4610               	rlncf	??_lcd_raw_send,f,c
  1673  000818  4610               	rlncf	??_lcd_raw_send,f,c
  1674  00081A  508C               	movf	3980,w,c	;volatile
  1675  00081C  1810               	xorwf	??_lcd_raw_send,w,c
  1676  00081E  0BF7               	andlw	-9
  1677  000820  1810               	xorwf	??_lcd_raw_send,w,c
  1678  000822  6E8C               	movwf	3980,c	;volatile
  1679                           
  1680                           ;lcdlib_2016.c: 82: LATDbits.LD4 = RS;
  1681  000824  B00F               	btfsc	lcd_raw_send@RS,0,c
  1682  000826  D002               	bra	u415
  1683  000828  988C               	bcf	3980,4,c	;volatile
  1684  00082A  D001               	bra	u416
  1685  00082C                     u415:
  1686  00082C  888C               	bsf	3980,4,c	;volatile
  1687  00082E                     u416:
  1688                           
  1689                           ;lcdlib_2016.c: 84: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1690  00082E  0E03               	movlw	3
  1691  000830                     u757:
  1692  000830  2EE8               	decfsz	wreg,f,c
  1693  000832  D7FE               	goto	u757
  1694                           
  1695                           ;lcdlib_2016.c: 89: LATDbits.LD5 = 1;
  1696  000834  8A8C               	bsf	3980,5,c	;volatile
  1697                           
  1698                           ;lcdlib_2016.c: 91: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1699  000836  0E03               	movlw	3
  1700  000838                     u767:
  1701  000838  2EE8               	decfsz	wreg,f,c
  1702  00083A  D7FE               	goto	u767
  1703                           
  1704                           ;lcdlib_2016.c: 93: LATDbits.LD5 = 0;
  1705  00083C  9A8C               	bcf	3980,5,c	;volatile
  1706                           
  1707                           ;lcdlib_2016.c: 95: _delay((unsigned long)((50)*(19660800/4000000.0)));
  1708  00083E  0E51               	movlw	81
  1709  000840                     u777:
  1710  000840  2EE8               	decfsz	wreg,f,c
  1711  000842  D7FE               	goto	u777
  1712  000844  D000               	nop2		;nop
  1713                           
  1714                           ;lcdlib_2016.c: 98: LATDbits.LD0 = in;
  1715  000846  B012               	btfsc	lcd_raw_send@in,0,c
  1716  000848  D002               	bra	u425
  1717  00084A  908C               	bcf	3980,0,c	;volatile
  1718  00084C  D001               	bra	u426
  1719  00084E                     u425:
  1720  00084E  808C               	bsf	3980,0,c	;volatile
  1721  000850                     u426:
  1722                           
  1723                           ;lcdlib_2016.c: 99: LATDbits.LD1 = in >> 1;
  1724  000850  C012  F010         	movff	lcd_raw_send@in,??_lcd_raw_send
  1725  000854  90D8               	bcf	status,0,c
  1726  000856  3210               	rrcf	??_lcd_raw_send,f,c
  1727  000858  4610               	rlncf	??_lcd_raw_send,f,c
  1728  00085A  508C               	movf	3980,w,c	;volatile
  1729  00085C  1810               	xorwf	??_lcd_raw_send,w,c
  1730  00085E  0BFD               	andlw	-3
  1731  000860  1810               	xorwf	??_lcd_raw_send,w,c
  1732  000862  6E8C               	movwf	3980,c	;volatile
  1733                           
  1734                           ;lcdlib_2016.c: 100: LATDbits.LD2 = in >> 2;
  1735  000864  C012  F010         	movff	lcd_raw_send@in,??_lcd_raw_send
  1736  000868  90D8               	bcf	status,0,c
  1737  00086A  3210               	rrcf	??_lcd_raw_send,f,c
  1738  00086C  90D8               	bcf	status,0,c
  1739  00086E  3210               	rrcf	??_lcd_raw_send,f,c
  1740  000870  4610               	rlncf	??_lcd_raw_send,f,c
  1741  000872  4610               	rlncf	??_lcd_raw_send,f,c
  1742  000874  508C               	movf	3980,w,c	;volatile
  1743  000876  1810               	xorwf	??_lcd_raw_send,w,c
  1744  000878  0BFB               	andlw	-5
  1745  00087A  1810               	xorwf	??_lcd_raw_send,w,c
  1746  00087C  6E8C               	movwf	3980,c	;volatile
  1747                           
  1748                           ;lcdlib_2016.c: 101: LATDbits.LD3 = in >> 3;
  1749  00087E  C012  F010         	movff	lcd_raw_send@in,??_lcd_raw_send
  1750  000882  90D8               	bcf	status,0,c
  1751  000884  3210               	rrcf	??_lcd_raw_send,f,c
  1752  000886  90D8               	bcf	status,0,c
  1753  000888  3210               	rrcf	??_lcd_raw_send,f,c
  1754  00088A  90D8               	bcf	status,0,c
  1755  00088C  3210               	rrcf	??_lcd_raw_send,f,c
  1756  00088E  4610               	rlncf	??_lcd_raw_send,f,c
  1757  000890  4610               	rlncf	??_lcd_raw_send,f,c
  1758  000892  4610               	rlncf	??_lcd_raw_send,f,c
  1759  000894  508C               	movf	3980,w,c	;volatile
  1760  000896  1810               	xorwf	??_lcd_raw_send,w,c
  1761  000898  0BF7               	andlw	-9
  1762  00089A  1810               	xorwf	??_lcd_raw_send,w,c
  1763  00089C  6E8C               	movwf	3980,c	;volatile
  1764                           
  1765                           ;lcdlib_2016.c: 103: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1766  00089E  0E03               	movlw	3
  1767  0008A0                     u787:
  1768  0008A0  2EE8               	decfsz	wreg,f,c
  1769  0008A2  D7FE               	goto	u787
  1770                           
  1771                           ;lcdlib_2016.c: 105: LATDbits.LD5 = 1;
  1772  0008A4  8A8C               	bsf	3980,5,c	;volatile
  1773                           
  1774                           ;lcdlib_2016.c: 107: _delay((unsigned long)((2)*(19660800/4000000.0)));
  1775  0008A6  0E03               	movlw	3
  1776  0008A8                     u797:
  1777  0008A8  2EE8               	decfsz	wreg,f,c
  1778  0008AA  D7FE               	goto	u797
  1779                           
  1780                           ;lcdlib_2016.c: 109: LATDbits.LD5 = 0;
  1781  0008AC  9A8C               	bcf	3980,5,c	;volatile
  1782                           
  1783                           ;lcdlib_2016.c: 111: _delay((unsigned long)((50)*(19660800/4000000.0)));
  1784  0008AE  0E51               	movlw	81
  1785  0008B0                     u807:
  1786  0008B0  2EE8               	decfsz	wreg,f,c
  1787  0008B2  D7FE               	goto	u807
  1788  0008B4  D000               	nop2		;nop
  1789  0008B6  0012               	return		;funcret
  1790  0008B8                     __end_of_lcd_raw_send:
  1791                           	opt stack 0
  1792                           tblptru	equ	0xFF8
  1793                           tblptrh	equ	0xFF7
  1794                           tblptrl	equ	0xFF6
  1795                           tablat	equ	0xFF5
  1796                           prodh	equ	0xFF4
  1797                           prodl	equ	0xFF3
  1798                           postinc0	equ	0xFEE
  1799                           wreg	equ	0xFE8
  1800                           postdec1	equ	0xFE5
  1801                           plusw1	equ	0xFE3
  1802                           fsr1l	equ	0xFE1
  1803                           indf2	equ	0xFDF
  1804                           plusw2	equ	0xFDB
  1805                           fsr2h	equ	0xFDA
  1806                           fsr2l	equ	0xFD9
  1807                           status	equ	0xFD8
  1808                           
  1809 ;; *************** function ___ltdiv *****************
  1810 ;; Defined at:
  1811 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\ltdiv.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  dividend        3   14[COMRAM] unsigned um
  1814 ;;  divisor         3   17[COMRAM] unsigned um
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  quotient        3   20[COMRAM] unsigned um
  1817 ;;  counter         1   23[COMRAM] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  3   14[COMRAM] unsigned um
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1827 ;;      Params:         6       0       0       0       0       0       0
  1828 ;;      Locals:         4       0       0       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0       0       0
  1830 ;;      Totals:        10       0       0       0       0       0       0
  1831 ;;Total ram usage:       10 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text11
  1842  000AC4                     __ptext11:
  1843                           	opt stack 0
  1844  000AC4                     ___ltdiv:
  1845                           	opt stack 29
  1846                           
  1847                           ;incstack = 0
  1848  000AC4  0E00               	movlw	0
  1849  000AC6  6E15               	movwf	___ltdiv@quotient,c
  1850  000AC8  0E00               	movlw	0
  1851  000ACA  6E16               	movwf	___ltdiv@quotient+1,c
  1852  000ACC  0E00               	movlw	0
  1853  000ACE  6E17               	movwf	___ltdiv@quotient+2,c
  1854  000AD0  5012               	movf	___ltdiv@divisor,w,c
  1855  000AD2  1013               	iorwf	___ltdiv@divisor+1,w,c
  1856  000AD4  1014               	iorwf	___ltdiv@divisor+2,w,c
  1857  000AD6  B4D8               	btfsc	status,2,c
  1858  000AD8  D023               	goto	l526
  1859  000ADA  0E01               	movlw	1
  1860  000ADC  6E18               	movwf	___ltdiv@counter,c
  1861  000ADE  D005               	goto	l1286
  1862  000AE0                     l1284:
  1863  000AE0  90D8               	bcf	status,0,c
  1864  000AE2  3612               	rlcf	___ltdiv@divisor,f,c
  1865  000AE4  3613               	rlcf	___ltdiv@divisor+1,f,c
  1866  000AE6  3614               	rlcf	___ltdiv@divisor+2,f,c
  1867  000AE8  2A18               	incf	___ltdiv@counter,f,c
  1868  000AEA                     l1286:
  1869  000AEA  AE14               	btfss	___ltdiv@divisor+2,7,c
  1870  000AEC  D7F9               	goto	l1284
  1871  000AEE                     l1288:
  1872  000AEE  90D8               	bcf	status,0,c
  1873  000AF0  3615               	rlcf	___ltdiv@quotient,f,c
  1874  000AF2  3616               	rlcf	___ltdiv@quotient+1,f,c
  1875  000AF4  3617               	rlcf	___ltdiv@quotient+2,f,c
  1876  000AF6  5012               	movf	___ltdiv@divisor,w,c
  1877  000AF8  5C0F               	subwf	___ltdiv@dividend,w,c
  1878  000AFA  5013               	movf	___ltdiv@divisor+1,w,c
  1879  000AFC  5810               	subwfb	___ltdiv@dividend+1,w,c
  1880  000AFE  5014               	movf	___ltdiv@divisor+2,w,c
  1881  000B00  5811               	subwfb	___ltdiv@dividend+2,w,c
  1882  000B02  A0D8               	btfss	status,0,c
  1883  000B04  D007               	goto	l531
  1884  000B06  5012               	movf	___ltdiv@divisor,w,c
  1885  000B08  5E0F               	subwf	___ltdiv@dividend,f,c
  1886  000B0A  5013               	movf	___ltdiv@divisor+1,w,c
  1887  000B0C  5A10               	subwfb	___ltdiv@dividend+1,f,c
  1888  000B0E  5014               	movf	___ltdiv@divisor+2,w,c
  1889  000B10  5A11               	subwfb	___ltdiv@dividend+2,f,c
  1890  000B12  8015               	bsf	___ltdiv@quotient,0,c
  1891  000B14                     l531:
  1892  000B14  90D8               	bcf	status,0,c
  1893  000B16  3214               	rrcf	___ltdiv@divisor+2,f,c
  1894  000B18  3213               	rrcf	___ltdiv@divisor+1,f,c
  1895  000B1A  3212               	rrcf	___ltdiv@divisor,f,c
  1896  000B1C  2E18               	decfsz	___ltdiv@counter,f,c
  1897  000B1E  D7E7               	goto	l1288
  1898  000B20                     l526:
  1899  000B20  C015  F00F         	movff	___ltdiv@quotient,?___ltdiv
  1900  000B24  C016  F010         	movff	___ltdiv@quotient+1,?___ltdiv+1
  1901  000B28  C017  F011         	movff	___ltdiv@quotient+2,?___ltdiv+2
  1902  000B2C  0012               	return		;funcret
  1903  000B2E                     __end_of___ltdiv:
  1904                           	opt stack 0
  1905                           tblptru	equ	0xFF8
  1906                           tblptrh	equ	0xFF7
  1907                           tblptrl	equ	0xFF6
  1908                           tablat	equ	0xFF5
  1909                           prodh	equ	0xFF4
  1910                           prodl	equ	0xFF3
  1911                           postinc0	equ	0xFEE
  1912                           wreg	equ	0xFE8
  1913                           postdec1	equ	0xFE5
  1914                           plusw1	equ	0xFE3
  1915                           fsr1l	equ	0xFE1
  1916                           indf2	equ	0xFDF
  1917                           plusw2	equ	0xFDB
  1918                           fsr2h	equ	0xFDA
  1919                           fsr2l	equ	0xFD9
  1920                           status	equ	0xFD8
  1921                           
  1922 ;; *************** function _Initial *****************
  1923 ;; Defined at:
  1924 ;;		line 146 in file "Motor_Control_4tab.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;		None
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;		None
  1929 ;; Return value:  Size  Location     Type
  1930 ;;		None               void
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1938 ;;      Params:         0       0       0       0       0       0       0
  1939 ;;      Locals:         0       0       0       0       0       0       0
  1940 ;;      Temps:          0       0       0       0       0       0       0
  1941 ;;      Totals:         0       0       0       0       0       0       0
  1942 ;;Total ram usage:        0 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    2
  1945 ;; This function calls:
  1946 ;;		_delay_1s
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           	psect	text12
  1953  000B82                     __ptext12:
  1954                           	opt stack 0
  1955  000B82                     _Initial:
  1956                           	opt stack 28
  1957                           
  1958                           ;Motor_Control_4tab.c: 148: TRISB = 0x00;
  1959                           
  1960                           ;incstack = 0
  1961  000B82  0E00               	movlw	0
  1962  000B84  6E93               	movwf	3987,c	;volatile
  1963                           
  1964                           ;Motor_Control_4tab.c: 149: PORTB = 0x00;
  1965  000B86  0E00               	movlw	0
  1966  000B88  6E81               	movwf	3969,c	;volatile
  1967                           
  1968                           ;Motor_Control_4tab.c: 150: TRISD = 0x00;
  1969  000B8A  0E00               	movlw	0
  1970  000B8C  6E95               	movwf	3989,c	;volatile
  1971                           
  1972                           ;Motor_Control_4tab.c: 151: TRISA = 0x00;
  1973  000B8E  0E00               	movlw	0
  1974  000B90  6E92               	movwf	3986,c	;volatile
  1975                           
  1976                           ;Motor_Control_4tab.c: 152: TRISCbits.TRISC1 = 0;
  1977  000B92  9294               	bcf	3988,1,c	;volatile
  1978                           
  1979                           ;Motor_Control_4tab.c: 153: TRISCbits.TRISC2 = 1;
  1980  000B94  8494               	bsf	3988,2,c	;volatile
  1981                           
  1982                           ;Motor_Control_4tab.c: 154: PORTC = 0x00;
  1983  000B96  0E00               	movlw	0
  1984  000B98  6E82               	movwf	3970,c	;volatile
  1985                           
  1986                           ;Motor_Control_4tab.c: 156: PORTB = 0x00;
  1987  000B9A  0E00               	movlw	0
  1988  000B9C  6E81               	movwf	3969,c	;volatile
  1989                           
  1990                           ;Motor_Control_4tab.c: 159: PORTA = 0xff;
  1991  000B9E  6880               	setf	3968,c	;volatile
  1992                           
  1993                           ;Motor_Control_4tab.c: 160: delay_1s();
  1994  000BA0  EC3E  F006         	call	_delay_1s	;wreg free
  1995                           
  1996                           ;Motor_Control_4tab.c: 161: PORTA = 0x00;
  1997  000BA4  0E00               	movlw	0
  1998  000BA6  6E80               	movwf	3968,c	;volatile
  1999                           
  2000                           ;Motor_Control_4tab.c: 162: delay_1s();
  2001  000BA8  EC3E  F006         	call	_delay_1s	;wreg free
  2002                           
  2003                           ;Motor_Control_4tab.c: 164: OSCCONbits.IRCF2 = 1;
  2004  000BAC  8CD3               	bsf	4051,6,c	;volatile
  2005                           
  2006                           ;Motor_Control_4tab.c: 165: OSCCONbits.IRCF1 = 1;
  2007  000BAE  8AD3               	bsf	4051,5,c	;volatile
  2008                           
  2009                           ;Motor_Control_4tab.c: 166: OSCCONbits.IRCF0 = 1;
  2010  000BB0  88D3               	bsf	4051,4,c	;volatile
  2011                           
  2012                           ;Motor_Control_4tab.c: 168: OSCCONbits.SCS0 = 0;
  2013  000BB2  90D3               	bcf	4051,0,c	;volatile
  2014                           
  2015                           ;Motor_Control_4tab.c: 169: OSCCONbits.SCS1 = 1;
  2016  000BB4  82D3               	bsf	4051,1,c	;volatile
  2017                           
  2018                           ;Motor_Control_4tab.c: 171: CCP1CON = 0b00000101;
  2019  000BB6  0E05               	movlw	5
  2020  000BB8  6EBD               	movwf	4029,c	;volatile
  2021                           
  2022                           ;Motor_Control_4tab.c: 173: T1CONbits.TMR1ON = 1;
  2023  000BBA  80CD               	bsf	4045,0,c	;volatile
  2024                           
  2025                           ;Motor_Control_4tab.c: 174: T1CONbits.T1CKPS0 = 1;
  2026  000BBC  88CD               	bsf	4045,4,c	;volatile
  2027                           
  2028                           ;Motor_Control_4tab.c: 175: T1CONbits.T1CKPS1 = 1;
  2029  000BBE  8ACD               	bsf	4045,5,c	;volatile
  2030                           
  2031                           ;Motor_Control_4tab.c: 176: T1CONbits.RD16 = 1;
  2032  000BC0  8ECD               	bsf	4045,7,c	;volatile
  2033                           
  2034                           ;Motor_Control_4tab.c: 178: INTCONbits.GIE = 1;
  2035  000BC2  8EF2               	bsf	intcon,7,c	;volatile
  2036                           
  2037                           ;Motor_Control_4tab.c: 179: INTCONbits.PEIE = 1;
  2038  000BC4  8CF2               	bsf	intcon,6,c	;volatile
  2039                           
  2040                           ;Motor_Control_4tab.c: 181: CCP2CON = 0b00001100;
  2041  000BC6  0E0C               	movlw	12
  2042  000BC8  6EBA               	movwf	4026,c	;volatile
  2043                           
  2044                           ;Motor_Control_4tab.c: 182: PR2 = 100;
  2045  000BCA  0E64               	movlw	100
  2046  000BCC  6ECB               	movwf	4043,c	;volatile
  2047                           
  2048                           ;Motor_Control_4tab.c: 183: T2CON = 0b00000100;
  2049  000BCE  0E04               	movlw	4
  2050  000BD0  6ECA               	movwf	4042,c	;volatile
  2051  000BD2  0012               	return		;funcret
  2052  000BD4                     __end_of_Initial:
  2053                           	opt stack 0
  2054                           tblptru	equ	0xFF8
  2055                           tblptrh	equ	0xFF7
  2056                           tblptrl	equ	0xFF6
  2057                           tablat	equ	0xFF5
  2058                           prodh	equ	0xFF4
  2059                           prodl	equ	0xFF3
  2060                           intcon	equ	0xFF2
  2061                           postinc0	equ	0xFEE
  2062                           wreg	equ	0xFE8
  2063                           postdec1	equ	0xFE5
  2064                           plusw1	equ	0xFE3
  2065                           fsr1l	equ	0xFE1
  2066                           indf2	equ	0xFDF
  2067                           plusw2	equ	0xFDB
  2068                           fsr2h	equ	0xFDA
  2069                           fsr2l	equ	0xFD9
  2070                           status	equ	0xFD8
  2071                           
  2072 ;; *************** function _delay_1s *****************
  2073 ;; Defined at:
  2074 ;;		line 187 in file "Motor_Control_4tab.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;		None
  2077 ;; Auto vars:     Size  Location     Type
  2078 ;;  i               1   15[COMRAM] unsigned char 
  2079 ;; Return value:  Size  Location     Type
  2080 ;;		None               void
  2081 ;; Registers used:
  2082 ;;		wreg, status,2, status,0
  2083 ;; Tracked objects:
  2084 ;;		On entry : 0/0
  2085 ;;		On exit  : 0/0
  2086 ;;		Unchanged: 0/0
  2087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2088 ;;      Params:         0       0       0       0       0       0       0
  2089 ;;      Locals:         1       0       0       0       0       0       0
  2090 ;;      Temps:          1       0       0       0       0       0       0
  2091 ;;      Totals:         2       0       0       0       0       0       0
  2092 ;;Total ram usage:        2 bytes
  2093 ;; Hardware stack levels used:    1
  2094 ;; Hardware stack levels required when called:    1
  2095 ;; This function calls:
  2096 ;;		Nothing
  2097 ;; This function is called by:
  2098 ;;		_main
  2099 ;;		_Initial
  2100 ;; This function uses a non-reentrant model
  2101 ;;
  2102                           
  2103                           	psect	text13
  2104  000C7C                     __ptext13:
  2105                           	opt stack 0
  2106  000C7C                     _delay_1s:
  2107                           	opt stack 29
  2108                           
  2109                           ;Motor_Control_4tab.c: 189: unsigned char i;
  2110                           ;Motor_Control_4tab.c: 190: for (i=0;i<25;i++)
  2111                           
  2112                           ;incstack = 0
  2113  000C7C  0E00               	movlw	0
  2114  000C7E  6E10               	movwf	delay_1s@i,c
  2115  000C80                     l804:
  2116  000C80  0E18               	movlw	24
  2117  000C82  6410               	cpfsgt	delay_1s@i,c
  2118  000C84  D001               	goto	l808
  2119  000C86  0012               	return	
  2120  000C88                     l808:
  2121                           
  2122                           ;Motor_Control_4tab.c: 191: _delay((unsigned long)((40)*(8000000/4000.0)));
  2123  000C88  0E68               	movlw	104
  2124  000C8A  6E0F               	movwf	??_delay_1s& (0+255),c
  2125  000C8C  0EE4               	movlw	228
  2126  000C8E                     u817:
  2127  000C8E  2EE8               	decfsz	wreg,f,c
  2128  000C90  D7FE               	goto	u817
  2129  000C92  2E0F               	decfsz	??_delay_1s& (0+255),f,c
  2130  000C94  D7FC               	goto	u817
  2131  000C96  D000               	nop2	
  2132  000C98  2A10               	incf	delay_1s@i,f,c
  2133  000C9A  D7F2               	goto	l804
  2134  000C9C                     __end_of_delay_1s:
  2135                           	opt stack 0
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           prodh	equ	0xFF4
  2141                           prodl	equ	0xFF3
  2142                           intcon	equ	0xFF2
  2143                           postinc0	equ	0xFEE
  2144                           wreg	equ	0xFE8
  2145                           postdec1	equ	0xFE5
  2146                           plusw1	equ	0xFE3
  2147                           fsr1l	equ	0xFE1
  2148                           indf2	equ	0xFDF
  2149                           plusw2	equ	0xFDB
  2150                           fsr2h	equ	0xFDA
  2151                           fsr2l	equ	0xFD9
  2152                           status	equ	0xFD8
  2153                           
  2154 ;; *************** function _ISR *****************
  2155 ;; Defined at:
  2156 ;;		line 59 in file "Motor_Control_4tab.c"
  2157 ;; Parameters:    Size  Location     Type
  2158 ;;		None
  2159 ;; Auto vars:     Size  Location     Type
  2160 ;;		None
  2161 ;; Return value:  Size  Location     Type
  2162 ;;		None               void
  2163 ;; Registers used:
  2164 ;;		wreg, status,2, status,0
  2165 ;; Tracked objects:
  2166 ;;		On entry : 0/0
  2167 ;;		On exit  : 0/0
  2168 ;;		Unchanged: 0/0
  2169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2170 ;;      Params:         0       0       0       0       0       0       0
  2171 ;;      Locals:         0       0       0       0       0       0       0
  2172 ;;      Temps:         14       0       0       0       0       0       0
  2173 ;;      Totals:        14       0       0       0       0       0       0
  2174 ;;Total ram usage:       14 bytes
  2175 ;; Hardware stack levels used:    1
  2176 ;; This function calls:
  2177 ;;		Nothing
  2178 ;; This function is called by:
  2179 ;;		Interrupt level 2
  2180 ;; This function uses a non-reentrant model
  2181 ;;
  2182                           
  2183                           	psect	intcode
  2184  000008                     __pintcode:
  2185                           	opt stack 0
  2186  000008                     _ISR:
  2187                           	opt stack 26
  2188                           
  2189                           ;incstack = 0
  2190  000008  824C               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2191  00000A  CFFA F001          	movff	pclath,??_ISR
  2192  00000E  CFFB F002          	movff	pclatu,??_ISR+1
  2193  000012  ED5C  F004         	call	int_func,f	;refresh shadow registers
  2194                           pclatu	equ	0xFFB
  2195                           pclath	equ	0xFFA
  2196                           tblptru	equ	0xFF8
  2197                           tblptrh	equ	0xFF7
  2198                           tblptrl	equ	0xFF6
  2199                           tablat	equ	0xFF5
  2200                           prodh	equ	0xFF4
  2201                           prodl	equ	0xFF3
  2202                           intcon	equ	0xFF2
  2203                           postinc0	equ	0xFEE
  2204                           wreg	equ	0xFE8
  2205                           postdec1	equ	0xFE5
  2206                           plusw1	equ	0xFE3
  2207                           fsr1l	equ	0xFE1
  2208                           indf2	equ	0xFDF
  2209                           plusw2	equ	0xFDB
  2210                           fsr2h	equ	0xFDA
  2211                           fsr2l	equ	0xFD9
  2212                           status	equ	0xFD8
  2213                           
  2214                           	psect	intcode_body
  2215  0008B8                     __pintcode_body:
  2216                           	opt stack 26
  2217  0008B8                     int_func:
  2218                           	opt stack 26
  2219  0008B8  0006               	pop		; remove dummy address from shadow register refresh
  2220  0008BA  CFE9 F003          	movff	fsr0l,??_ISR+2
  2221  0008BE  CFEA F004          	movff	fsr0h,??_ISR+3
  2222  0008C2  CFE1 F005          	movff	fsr1l,??_ISR+4
  2223  0008C6  CFE2 F006          	movff	fsr1h,??_ISR+5
  2224  0008CA  CFD9 F007          	movff	fsr2l,??_ISR+6
  2225  0008CE  CFDA F008          	movff	fsr2h,??_ISR+7
  2226  0008D2  CFF3 F009          	movff	prodl,??_ISR+8
  2227  0008D6  CFF4 F00A          	movff	prodh,??_ISR+9
  2228  0008DA  CFF6 F00B          	movff	tblptrl,??_ISR+10
  2229  0008DE  CFF7 F00C          	movff	tblptrh,??_ISR+11
  2230  0008E2  CFF8 F00D          	movff	tblptru,??_ISR+12
  2231  0008E6  CFF5 F00E          	movff	tablat,??_ISR+13
  2232                           
  2233                           ;Motor_Control_4tab.c: 62: if (PIR1bits.CCP1IF)
  2234  0008EA  A49E               	btfss	3998,2,c	;volatile
  2235  0008EC  D00E               	goto	i2l116
  2236                           
  2237                           ;Motor_Control_4tab.c: 63: {
  2238                           ;Motor_Control_4tab.c: 64: PIR1bits.CCP1IF = 0;
  2239  0008EE  949E               	bcf	3998,2,c	;volatile
  2240                           
  2241                           ;Motor_Control_4tab.c: 65: TMR1H = 0;
  2242  0008F0  0E00               	movlw	0
  2243  0008F2  6ECF               	movwf	4047,c	;volatile
  2244                           
  2245                           ;Motor_Control_4tab.c: 66: TMR1L = 0;
  2246  0008F4  0E00               	movlw	0
  2247  0008F6  6ECE               	movwf	4046,c	;volatile
  2248                           
  2249                           ;Motor_Control_4tab.c: 67: captured = (CCPR1H << 8);
  2250  0008F8  50BF               	movf	4031,w,c	;volatile
  2251  0008FA  6E4A               	movwf	_captured+1,c
  2252  0008FC  6A49               	clrf	_captured,c
  2253                           
  2254                           ;Motor_Control_4tab.c: 68: captured = captured + CCPR1L;
  2255  0008FE  50BE               	movf	4030,w,c	;volatile
  2256  000900  2449               	addwf	_captured,w,c
  2257  000902  6E49               	movwf	_captured,c
  2258  000904  0E00               	movlw	0
  2259  000906  204A               	addwfc	_captured+1,w,c
  2260  000908  6E4A               	movwf	_captured+1,c
  2261  00090A                     i2l116:
  2262  00090A  C00E  FFF5         	movff	??_ISR+13,tablat
  2263  00090E  C00D  FFF8         	movff	??_ISR+12,tblptru
  2264  000912  C00C  FFF7         	movff	??_ISR+11,tblptrh
  2265  000916  C00B  FFF6         	movff	??_ISR+10,tblptrl
  2266  00091A  C00A  FFF4         	movff	??_ISR+9,prodh
  2267  00091E  C009  FFF3         	movff	??_ISR+8,prodl
  2268  000922  C008  FFDA         	movff	??_ISR+7,fsr2h
  2269  000926  C007  FFD9         	movff	??_ISR+6,fsr2l
  2270  00092A  C006  FFE2         	movff	??_ISR+5,fsr1h
  2271  00092E  C005  FFE1         	movff	??_ISR+4,fsr1l
  2272  000932  C004  FFEA         	movff	??_ISR+3,fsr0h
  2273  000936  C003  FFE9         	movff	??_ISR+2,fsr0l
  2274  00093A  C002  FFFB         	movff	??_ISR+1,pclatu
  2275  00093E  C001  FFFA         	movff	??_ISR,pclath
  2276  000942  924C               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2277  000944  0011               	retfie		f
  2278  000946                     __end_of_ISR:
  2279                           	opt stack 0
  2280                           pclatu	equ	0xFFB
  2281                           pclath	equ	0xFFA
  2282                           tblptru	equ	0xFF8
  2283                           tblptrh	equ	0xFF7
  2284                           tblptrl	equ	0xFF6
  2285                           tablat	equ	0xFF5
  2286                           prodh	equ	0xFF4
  2287                           prodl	equ	0xFF3
  2288                           intcon	equ	0xFF2
  2289                           postinc0	equ	0xFEE
  2290                           fsr0h	equ	0xFEA
  2291                           fsr0l	equ	0xFE9
  2292                           wreg	equ	0xFE8
  2293                           postdec1	equ	0xFE5
  2294                           plusw1	equ	0xFE3
  2295                           fsr1h	equ	0xFE2
  2296                           fsr1l	equ	0xFE1
  2297                           indf2	equ	0xFDF
  2298                           plusw2	equ	0xFDB
  2299                           fsr2h	equ	0xFDA
  2300                           fsr2l	equ	0xFD9
  2301                           status	equ	0xFD8
  2302                           pclatu	equ	0xFFB
  2303                           pclath	equ	0xFFA
  2304                           tblptru	equ	0xFF8
  2305                           tblptrh	equ	0xFF7
  2306                           tblptrl	equ	0xFF6
  2307                           tablat	equ	0xFF5
  2308                           prodh	equ	0xFF4
  2309                           prodl	equ	0xFF3
  2310                           intcon	equ	0xFF2
  2311                           postinc0	equ	0xFEE
  2312                           fsr0h	equ	0xFEA
  2313                           fsr0l	equ	0xFE9
  2314                           wreg	equ	0xFE8
  2315                           postdec1	equ	0xFE5
  2316                           plusw1	equ	0xFE3
  2317                           fsr1h	equ	0xFE2
  2318                           fsr1l	equ	0xFE1
  2319                           indf2	equ	0xFDF
  2320                           plusw2	equ	0xFDB
  2321                           fsr2h	equ	0xFDA
  2322                           fsr2l	equ	0xFD9
  2323                           status	equ	0xFD8
  2324                           
  2325                           	psect	rparam
  2326  0000                     pclatu	equ	0xFFB
  2327                           pclath	equ	0xFFA
  2328                           tblptru	equ	0xFF8
  2329                           tblptrh	equ	0xFF7
  2330                           tblptrl	equ	0xFF6
  2331                           tablat	equ	0xFF5
  2332                           prodh	equ	0xFF4
  2333                           prodl	equ	0xFF3
  2334                           intcon	equ	0xFF2
  2335                           postinc0	equ	0xFEE
  2336                           fsr0h	equ	0xFEA
  2337                           fsr0l	equ	0xFE9
  2338                           wreg	equ	0xFE8
  2339                           postdec1	equ	0xFE5
  2340                           plusw1	equ	0xFE3
  2341                           fsr1h	equ	0xFE2
  2342                           fsr1l	equ	0xFE1
  2343                           indf2	equ	0xFDF
  2344                           plusw2	equ	0xFDB
  2345                           fsr2h	equ	0xFDA
  2346                           fsr2l	equ	0xFD9
  2347                           status	equ	0xFD8
  2348                           
  2349                           	psect	temp
  2350  00004C                     btemp:
  2351                           	opt stack 0
  2352  00004C                     	ds	1
  2353  0000                     int$flags	set	btemp
  2354                           pclatu	equ	0xFFB
  2355                           pclath	equ	0xFFA
  2356                           tblptru	equ	0xFF8
  2357                           tblptrh	equ	0xFF7
  2358                           tblptrl	equ	0xFF6
  2359                           tablat	equ	0xFF5
  2360                           prodh	equ	0xFF4
  2361                           prodl	equ	0xFF3
  2362                           intcon	equ	0xFF2
  2363                           postinc0	equ	0xFEE
  2364                           fsr0h	equ	0xFEA
  2365                           fsr0l	equ	0xFE9
  2366                           wreg	equ	0xFE8
  2367                           postdec1	equ	0xFE5
  2368                           plusw1	equ	0xFE3
  2369                           fsr1h	equ	0xFE2
  2370                           fsr1l	equ	0xFE1
  2371                           indf2	equ	0xFDF
  2372                           plusw2	equ	0xFDB
  2373                           fsr2h	equ	0xFDA
  2374                           fsr2l	equ	0xFD9
  2375                           status	equ	0xFD8


Data Sizes:
    Strings     13
    Constant    5
    Data        22
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          126     50      75
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    Motor	PTR const unsigned char  size(2) Largest target is 6
		 -> STR_2(CODE[6]), 

    Speed	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_1(CODE[7]), 

    lcd_print@mess	PTR const unsigned char  size(2) Largest target is 7
		 -> STR_2(CODE[6]), STR_1(CODE[7]), 


Critical Paths under _main in COMRAM

    _main->_lcd_display_value
    _lcd_start->_lcd_clear
    _lcd_clear->_lcd_command
    _lcd_print->_lcd_print_ch
    _lcd_display_value->___awdiv
    _lcd_print_ch->_lcd_raw_send
    _lcd_cursor->_lcd_command
    _lcd_command->_lcd_raw_send
    _Initial->_delay_1s

Critical Paths under _ISR in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ISR in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ISR in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    4741
                                             26 COMRAM    24    24      0
                            _Initial
                            ___ltdiv
                           _delay_1s
                         _lcd_cursor
                  _lcd_display_value
                          _lcd_print
                          _lcd_start
 ---------------------------------------------------------------------------------
 (1) _lcd_start                                            3     3      0     764
                                             20 COMRAM     2     2      0
                          _lcd_clear
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            1     1      0     348
                                             19 COMRAM     1     1      0
                        _lcd_command
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            5     3      2     566
                                             19 COMRAM     5     3      2
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (1) _lcd_display_value                                    4     4      0    1765
                                             22 COMRAM     4     4      0
                            ___awdiv
                            ___awmod
                       _lcd_print_ch
 ---------------------------------------------------------------------------------
 (2) _lcd_print_ch                                         1     1      0     348
                                             18 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     680
                                             14 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     556
                                             14 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (1) _lcd_cursor                                           2     1      1     800
                                             19 COMRAM     2     1      1
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _lcd_command                                          1     1      0     348
                                             18 COMRAM     1     1      0
                       _lcd_raw_send
 ---------------------------------------------------------------------------------
 (3) _lcd_raw_send                                         4     3      1     326
                                             14 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) ___ltdiv                                             10     4      6     418
                                             14 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (1) _Initial                                              0     0      0      30
                           _delay_1s
 ---------------------------------------------------------------------------------
 (1) _delay_1s                                             2     2      0      30
                                             14 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                 14    14      0       0
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Initial
     _delay_1s
   ___ltdiv
   _delay_1s
   _lcd_cursor
     _lcd_command
       _lcd_raw_send
   _lcd_display_value
     ___awdiv
     ___awmod
     _lcd_print_ch
       _lcd_raw_send
   _lcd_print
     _lcd_print_ch
       _lcd_raw_send
   _lcd_start
     _lcd_clear
       _lcd_command
         _lcd_raw_send
     _lcd_command
       _lcd_raw_send

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7E      0       0       0        0.0%
COMRAM              7E     32      4B       1       59.5%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      4B      15        0.0%
DATA                 0      0      4B       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Fri Nov 18 09:37:30 2016

             ?_lcd_raw_send 000F                           _i 004B                ___awdiv@sign 0014  
               __CFG_BORV$3 000000               ?_lcd_print_ch 0001                __CFG_CP0$OFF 000000  
              __CFG_CP1$OFF 000000                __CFG_CP2$OFF 000000                __CFG_CP3$OFF 000000  
               __CFG_OSC$HS 000000                         l531 0B14                         l526 0B20  
                       l804 0C80                         l808 0C88                __CFG_CPB$OFF 000000  
                       u405 0814                         _PR2 000FCB                         u415 082C  
                       u416 082E                         u425 084E                         u426 0850  
              __CFG_CPD$OFF 000000                         _ISR 0008                         u621 0632  
                       u385 07DA                         u395 07F6                         u807 08B0  
                       u727 0BE0                         u817 0C8E                         u737 0C5A  
                       u747 0C70                         u757 0830                         u767 0838  
                       u777 0840                         u787 08A0                         u797 08A8  
              ___awmod@sign 0014                         prod 000FF3                         wreg 000FE8  
               lcd_cursor@x 0015                 lcd_cursor@y 0014                __CFG_LVP$OFF 000000  
                      ?_ISR 0001                __CFG_WDT$OFF 000000                        l1210 0A68  
                      l1220 0A8A                        l1222 0A8E                        l1230 0AAC  
                      l1214 0A74                        l1242 0CA8                        l1234 0ABA  
                      l1226 0AA2                        l1218 0A82                        l1180 0A12  
                      l1172 09F4                        l1412 07B4                        l1340 0678  
                      l1190 0A32                        l1182 0A16                        l1166 09E4  
                      l1270 0B34                        l1254 0BEC                        l1264 0C10  
                      l1352 06A0                        l1344 0680                        l1178 0A0A  
                      l1194 0A3C                        l1274 0B5A                        l1258 0BF4  
                      l1338 0674                        l1284 0AE0                        l1380 071C  
                      l1356 06B2                        l1348 0698                        l1286 0AEA  
                      l1198 0A4A                        l1390 0740                        l1358 06D4  
                      l1374 0714                        l1288 0AEE                        l1394 0752  
                      l1386 0738                        l1378 0718                        l1396 0774  
                      STR_1 0606                        STR_2 060D                        _main 0614  
                      fsr0h 000FEA                        fsr1h 000FE2                        fsr0l 000FE9  
                      fsr2h 000FDA                        fsr1l 000FE1                        indf2 000FDF  
                      fsr2l 000FD9                        btemp 004C                        pclat 000FFA  
                      prodh 000FF4                        prodl 000FF3                        start 0016  
             __CFG_IESO$OFF 000000               __CFG_MCLRE$ON 000000              ??_lcd_raw_send 0010  
              ___param_bank 000010                       ??_ISR 0001             __end_of_Initial 0BD4  
            ??_lcd_print_ch 0013               lcd_command@in 0013                       ?_main 0001  
           __end_of___awdiv 0A54             __end_of___awmod 0AC4             ___awdiv@divisor 0011  
                     _T2CON 000FCA             __end_of___ltdiv 0B2E                       i2l116 090A  
           ___awdiv@counter 0013                       _TMR1H 000FCF                       _TMR1L 000FCE  
                     _PORTA 000F80                       _PORTB 000F81                       _PORTC 000F82  
                     _TRISA 000F92                       _TRISB 000F93                       _TRISD 000F95  
             __CFG_PWRT$OFF 000000               __CFG_WRT0$OFF 000000               __CFG_WRT1$OFF 000000  
             __CFG_WRT2$OFF 000000               __CFG_WRT3$OFF 000000              __CFG_EBTR0$OFF 000000  
            __CFG_FCMEN$OFF 000000              __CFG_EBTR1$OFF 000000              __CFG_EBTR2$OFF 000000  
            __CFG_EBTR3$OFF 000000                       _Motor 0045                       _Speed 0047  
             __CFG_WRTB$OFF 000000               __CFG_WRTC$OFF 000000               __CFG_WRTD$OFF 000000  
            __CFG_EBTRB$OFF 000000                       main@p 0032              __CFG_BOREN$OFF 000000  
                     tablat 000FF5                       plusw1 000FE3                       plusw2 000FDB  
                     status 000FD8             __initialization 0C16                __end_of_main 07BC  
                    ??_main 001B               __activetblptr 000001                      _CCPR1H 000FBF  
                    _CCPR1L 000FBE                      _CCPR2L 000FBB            ___awdiv@dividend 000F  
          __end_of_delay_1s 0C9C                   ??_Initial 0011              __CFG_XINST$OFF 000000  
             lcd_print@mess 0014            __end_of_lcd_init 0606        __size_of_lcd_command 000E  
                 ??___awdiv 0013              __CFG_STVREN$ON 000000                   ??___awmod 0013  
                 ??___ltdiv 0015            ___awdiv@quotient 0015             ___awmod@divisor 0011  
           ___awmod@counter 0013                __pdataCOMRAM 0033                __mediumconst 0000  
                    tblptrh 000FF7                      tblptrl 000FF6                      tblptru 000FF8  
      __end_of_lcd_raw_send 08B8        __end_of_lcd_print_ch 0CDA                  __accesstop 0080  
   __end_of__initialization 0C3C             __CFG_PBADEN$OFF 000000               ___rparam_used 000001  
            __pcstackCOMRAM 0001          __size_of_lcd_clear 002E          __size_of_lcd_print 0054  
        __size_of_lcd_start 0042              lcd_raw_send@RS 000F              lcd_raw_send@in 0012  
     lcd_display_value@tens 0018                     _CCP1CON 000FBD                     _CCP2CON 000FBA  
                 ?_delay_1s 0001                  _lcd_cursor 0C9C                     _Initial 0B82  
                   __Hparam 0000                     __Lparam 0000           __end_of_lcd_clear 0C7C  
         __end_of_lcd_print 0B82           __end_of_lcd_start 0C16              lcd_print_ch@in 0013  
                   ___awdiv 09D0                     ___awmod 0A54                     ___ltdiv 0AC4  
              __psmallconst 0600                     __pcinit 0C16                     __ramtop 0600  
                   __ptext0 0614                     __ptext1 0BD4                     __ptext2 0C4E  
                   __ptext3 0B2E                     __ptext4 0946                     __ptext5 0CCC  
                   __ptext6 0A54                     __ptext7 09D0                     __ptext8 0C9C  
                   __ptext9 0CDA                __size_of_ISR 093E                   _T1CONbits 000FCD  
     __size_of_lcd_raw_send 00FC            ___awmod@dividend 000F                  ??_delay_1s 000F  
     __size_of_lcd_print_ch 000E              __pintcode_body 08B8        end_of_initialization 0C3C  
                   int_func 08B8            ___ltdiv@dividend 000F                     postdec1 000FE5  
                   postinc0 000FEE                _lcd_raw_send 07BC                _lcd_print_ch 0CCC  
                 _TRISCbits 000F94                 ?_lcd_cursor 0014            ___ltdiv@quotient 0015  
             ??_lcd_command 0013                  lcd_print@i 0018                  lcd_start@i 0016  
         _lcd_display_value 0946          ?_lcd_display_value 0001               __pidataCOMRAM 0CB6  
       ??_lcd_display_value 0017         start_initialization 0C16                 __end_of_ISR 0946  
 __end_of_lcd_display_value 09D0         __size_of_lcd_cursor 001A         __end_of_lcd_command 0CE8  
          __CFG_LPT1OSC$OFF 000000                 __pbssCOMRAM 0049           __size_of_delay_1s 0020  
                  ?_Initial 0001           __CFG_CCP2MX$PORTC 000000                   __pintcode 0008  
                  ?___awdiv 000F                    ?___awmod 000F                    ?___ltdiv 000F  
                 _lcd_clear 0C4E                   _lcd_print 0B2E      lcd_display_value@hunds 0017  
                 _lcd_start 0BD4      lcd_display_value@value 001A      lcd_display_value@units 0019  
               __smallconst 0600                   delay_1s@i 0010                    _LATDbits 000F8C  
                  _PIE1bits 000F9D                 _lcd_command 0CDA  __size_of_lcd_display_value 008A  
           ___ltdiv@divisor 0012                    _PIR1bits 000F9E             ___ltdiv@counter 0018  
          __CFG_WDTPS$32768 000000                   main@F3367 0033                  ?_lcd_clear 0001  
                ?_lcd_print 0014                  ?_lcd_start 0001                   main@rev_s 0030  
              ??_lcd_cursor 0015                   copy_data0 0C30                    __Hrparam 0000  
          __size_of_Initial 0052                    __Lrparam 0000                __Lsmallconst 0600  
        __end_of_lcd_cursor 0CB6            __size_of___awdiv 0084            __size_of___awmod 0070  
          __size_of___ltdiv 006A                    _delay_1s 0C7C                    _captured 0049  
                  __ptext10 07BC                    __ptext11 0AC4                    __ptext12 0B82  
                  __ptext13 0C7C                    _lcd_init 0601               __size_of_main 01A8  
                  int$flags 004C                 ??_lcd_clear 0014                    main@duty 001B  
                  main@tclk 002D                 ??_lcd_print 0016                 ??_lcd_start 0015  
                _INTCONbits 000FF2                    intlevel2 0000                  _OSCCONbits 000FD3  
              ?_lcd_command 0001  
